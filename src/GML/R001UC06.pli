 /*       SIST ENDRET 09/10-95 12.58.28 AV   JDA0310                  */00000000
 /*       SIST ENDRET 25/07-94 13.50.43 AV   DYBVIK                   */00000010
 /*       SIST ENDRET 25/02-94 12.32.53 AV   HERMAN                   */00000020
 /*       SIST ENDRET 26/04-91 11.43.45 AV   DYBVIK                   */00000030
 /*IDENTIFIKASJON:                                                    */00000040
 /*    R001UC06 - PROSEDYRE I PLI                                     */00000050
 /*    PROGRAMMERER:       SATISH 1991                                */00000060
 /*HENSIKT:                                                           */00000070
 /*    PROGRAMMET INNEHOLDER:                                         */00000080
 /*        PROSEDYRER FOR Å OVERFØRE DATA FRA FO_TRANS_OMR TIL        */00000090
 /*            SKJERMBILDE (MAP S001UC1 MAPSET S001UC3).              */00000100
 /*BRUK:                                                              */00000110
 /*    OVERFØR_FO_SØKER_MAP:   OVERFØRING AV SØKERDELEN               */00000120
 /*    OVERFØR_FO_BARN_MAP:    OVERFØRING AV BARNEDELEN               */00000130
 /*                                                                   */00000140
 /* ***************************************************************** */00000150
 /*                                                                   */00000160
 /*   PROSEDYRA OVERFØRER DATA FRA FO_TRANS_OMR.FOS TIL               */00000170
 /*   SKJERMBILDE FO_SØKER DELEN.                                     */00000180
 /*   MAP: S001UC1                                                    */00000190
 /*   MAPSET: S001UC3                                                 */00000200
 /*                                                                   */00000210
 /* ***************************************************************** */00000220
 %SKIP(2);                                                              00000230
 OVERFØR_FO_SØKER_MAP: PROC;                                            00000240
                                                                        00000250
   DCL    NORMAL  CHAR (1),                                             00000260
      NOR_NUM CHAR (1),                                                 00000270
      BRI_NUM CHAR (1);                                                 00000280
      NORMAL    = ' ';                                                  00000290
      NOR_NUM   = '&';                                                  00000300
      BRI_NUM   = 'Q';                                                  00000310
      /*   TEST                        */                               00000320
      DCL HFELT     PIC '(11)9';                                        00000330
      HFELT = FOS.BT_ANT;                                               00000340
      /*   TEST                        */                               00000350
 %SKIP(2);                                                              00000360
      S001UC1O.REGDATOO = F_FELT_PIC_CHAR6  (FOS.REGDATO);              00000370
      S001UC1O.TERMIDO = FOS.TERMID;                                    00000380
      S001UC1O.FNRO  = F_FELT_PIC_CHAR11 (FOS.FNR);                     00000390
      S001UC1O.TKNRO = F_FELT_PIC_CHAR4 (FOS.TKNR);                     00000400
      S001UC1O.TILL_EKO = FOS.TILL_EK;                                  00000410
      IF F_FELT_PIC_CHAR2(FOS.BT_ANT) ^= (2)'0' THEN                    00000420
        S001UC1O.BT_ANTO = F_FELT_PIC_CHAR2 (FOS.BT_ANT);               00000430
      S001UC1O.VIRK_DATO_MÅO = FOS.VIRK_DATO_MÅ;                        00000440
      IF F_FELT_PIC_CHAR11(FOS.FNR_EK) ^= (11)'0' THEN                  00000450
         S001UC1O.FNR_EKO = F_FELT_PIC_CHAR11 (FOS.FNR_EK);             00000460
                                                                        00000470
      S001UC1O.MINST4GO = FOS.MINST_4G;                                 00000480
                                                                        00000490
 /* FEILMELDINGER MARKERING AV  FELT (ATTRIBUTTENE) */                  00000500
 %SKIP(2);                                                              00000510
      S001UC1O.DUMMYA = '_';                                            00000520
                                                                        00000530
  /*DERSOM FEIL FRA BEHANDLE-TRANS OVERFØRES FEIL HER,BARE FØRSTE GANG*/00000540
       IF ^ FRA_CICS THEN                                               00000550
          DO;                                                           00000560
            IF FEIL_MELD_NR > 0 THEN                                    00000570
               CALL SKRIV_FEIL(FEIL_MELD_NR);                           00000580
             FEIL_MELD_NR = 0;                                          00000590
          END;                                                          00000600
                                                                        00000610
      S001UC1O.REGDATOA = DFHBMASK;                                     00000620
      S001UC1O.TERMIDA  = DFHBMASK;                                     00000630
                                                                        00000640
      IF FOS.FNRNR = 0 THEN                                             00000650
         S001UC1O.FNRA = NOR_NUM;                                       00000660
      ELSE                                                              00000670
         DO;                                                            00000680
            S001UC1O.FNRA = BRI_NUM;                                    00000690
            S001UC1I.FNRL = CURSOR_POS;                                 00000700
            IF FOS.FNRNR ^= 999 THEN                                    00000710
               CALL SKRIV_FEIL(FOS.FNRNR);                              00000720
         END;                                                           00000730
      IF FOS.TKNRNR = 0 THEN                                            00000740
         S001UC1O.TKNRA = NOR_NUM;                                      00000750
      ELSE                                                              00000760
         DO;                                                            00000770
            S001UC1O.TKNRA = BRI_NUM;                                   00000780
            S001UC1I.TKNRL = CURSOR_POS;                                00000790
            IF FOS.TKNRNR ^= 999 THEN                                   00000800
               CALL SKRIV_FEIL(FOS.TKNRNR);                             00000810
         END;                                                           00000820
      IF FOS.TILL_EKNR = 0 THEN                                         00000830
         S001UC1O.TILL_EKA = NORMAL;                                    00000840
      ELSE                                                              00000850
         DO;                                                            00000860
            S001UC1O.TILL_EKA = DFHBMBRY;                               00000870
            S001UC1I.TILL_EKL = CURSOR_POS;                             00000880
            IF FOS.TILL_EKNR ^= 999 THEN                                00000890
               CALL SKRIV_FEIL(FOS.TILL_EKNR);                          00000900
         END;                                                           00000910
      IF FOS.BT_ANTNR = 0 THEN                                          00000920
         S001UC1O.BT_ANTA = NOR_NUM;                                    00000930
      ELSE                                                              00000940
         DO;                                                            00000950
            S001UC1O.BT_ANTA = BRI_NUM;                                 00000960
            S001UC1I.BT_ANTL = CURSOR_POS;                              00000970
            IF FOS.BT_ANTNR ^= 999 THEN                                 00000980
               CALL SKRIV_FEIL(FOS.BT_ANTNR);                           00000990
         END;                                                           00001000
      IF FOS.VIRK_DATO_MÅNR = 0 THEN                                    00001010
         S001UC1O.VIRK_DATO_MÅA = NOR_NUM;                              00001020
      ELSE                                                              00001030
         DO;                                                            00001040
            S001UC1O.VIRK_DATO_MÅA = BRI_NUM;                           00001050
            S001UC1I.VIRK_DATO_MÅL = CURSOR_POS;                        00001060
            IF FOS.VIRK_DATO_MÅNR ^= 999 THEN                           00001070
               CALL SKRIV_FEIL(FOS.VIRK_DATO_MÅNR);                     00001080
         END;                                                           00001090
      IF FOS.FNR_EKNR = 0 THEN                                          00001100
         S001UC1O.FNR_EKA = NOR_NUM;                                    00001110
      ELSE                                                              00001120
         DO;                                                            00001130
            S001UC1O.FNR_EKA = BRI_NUM;                                 00001140
            S001UC1I.FNR_EKL = CURSOR_POS;                              00001150
            IF FOS.FNR_EKNR ^= 999 THEN                                 00001160
               CALL SKRIV_FEIL(FOS.FNR_EKNR);                           00001170
         END;                                                           00001180
                                                                        00001190
      IF FOS.MINST_4GNR = 0 THEN                                        00001200
         S001UC1O.MINST4GA = DFHBMUNP ;                                 00001210
      ELSE                                                              00001220
         DO;                                                            00001230
            S001UC1O.MINST4GA = DFHBMBRY;                               00001240
            S001UC1I.MINST4GL = CURSOR_POS;                             00001250
            IF FOS.MINST_4GNR ^= 999 THEN                               00001260
               CALL SKRIV_FEIL(FOS.MINST_4GNR);                         00001270
         END;                                                           00001280
                                                                        00001290
                                                                        00001300
     /* VED GAMLE TRANS SKAL FNR OG VIRKDATO BLOKKERES    */            00001310
                                                                        00001320
      IF NY_GML_TRANS_IND = 'G' & FRA_MED_DIALOG THEN                   00001330
         DO;                                                            00001340
           S001UC1O.FNRA          = DFHBMASK;                           00001350
           S001UC1O.VIRK_DATO_MÅA = DFHBMASK;                           00001360
         END;                                                           00001370
                                                                        00001380
      ELSE IF FRA_UTEN_DIALOG THEN      /* BLOKKER ALT SAMMEN   */      00001390
                                                                        00001400
         DO;                                                            00001410
           S001UC1O.REGDATOA      = DFHBMASK;                           00001420
           S001UC1O.TERMIDA       = DFHBMASK;                           00001430
           S001UC1O.FNRA          = DFHBMASK;                           00001440
           S001UC1O.TKNRA         = DFHBMASK;                           00001450
           S001UC1O.TILL_EKA      = DFHBMASK;                           00001460
           S001UC1O.BT_ANTA       = DFHBMASK;                           00001470
           S001UC1O.VIRK_DATO_MÅA = DFHBMASK;                           00001480
           S001UC1O.FNR_EKA       = DFHBMASK;                           00001490
           S001UC1O.MINST4GA      = DFHBMASK;                           00001500
                                                                        00001510
         END;                                                           00001520
                                                                        00001530
      IF ^ FRA_CICS THEN                                                00001540
         DO;                                                            00001550
           S001UC1O.STYRE_KODEA    = DFHBMASK;                          00001560
           S001UC1O.FUNKSJONSKODEA = DFHBMASK;                          00001570
         END;                                                           00001580
                                                                        00001590
   END OVERFØR_FO_SØKER_MAP;                                            00001600
                                                                        00001610
 OVERFØR_FO_SØKER2_MAP:                                                 00001620
   PROC;                                                                00001630
   DCL                                                                  00001640
      NORMAL  CHAR (1),                                                 00001650
      NOR_NUM CHAR (1),                                                 00001660
      BRI_NUM CHAR (1);                                                 00001670
      NORMAL    = ' ';                                                  00001680
      NOR_NUM   = '&';                                                  00001690
      BRI_NUM   = 'Q';                                                  00001700
                                                                        00001710
      IF  FOS.PENSJONSINNTEKT > 0   THEN                                00001720
          S001UC1O.PIO         = FOS.PENSJONSINNTEKT;                   00001730
      IF  FOS.ARBEIDSINNTEKT   > 0  THEN                                00001740
          S001UC1O.AIO         = FOS.ARBEIDSINNTEKT;                    00001750
      IF  FOS.PENSJONSINNTEKT_EK > 0 THEN                               00001760
          S001UC1O.PI_EKO      = FOS.PENSJONSINNTEKT_EK;                00001770
      IF  FOS.ARBEIDSINNTEKT_EK > 0 THEN                                00001780
          S001UC1O.AI_EKO      = FOS.ARBEIDSINNTEKT_EK;                 00001790
 %SKIP(3);                             /*    */                         00001800
      IF FOS.PENSJONSINNTEKTNR = 0 THEN                                 00001810
         S001UC1O.PIA         = NOR_NUM;                                00001820
      ELSE                                                              00001830
         DO;                                                            00001840
            S001UC1O.PIA         = DFHBMBRY;                            00001850
            S001UC1I.PIL         = CURSOR_POS;                          00001860
            IF FOS.PENSJONSINNTEKTNR ^= 999 THEN                        00001870
               CALL SKRIV_FEIL(FOS.PENSJONSINNTEKTNR );                 00001880
         END;                                                           00001890
      IF FOS.ARBEIDSINNTEKTNR = 0 THEN                                  00001900
         S001UC1O.AIA         = NOR_NUM;                                00001910
      ELSE                                                              00001920
         DO;                                                            00001930
            S001UC1O.AIA         = DFHBMBRY;                            00001940
            S001UC1I.AIL         = CURSOR_POS;                          00001950
            IF FOS.ARBEIDSINNTEKTNR ^= 999 THEN                         00001960
               CALL SKRIV_FEIL(FOS.ARBEIDSINNTEKTNR );                  00001970
         END;                                                           00001980
      IF FOS.PENSJONSINNTEKT_EKNR = 0 THEN                              00001990
         S001UC1O.PI_EKA         = NOR_NUM;                             00002000
      ELSE                                                              00002010
         DO;                                                            00002020
            S001UC1O.PI_EKA         = DFHBMBRY;                         00002030
            S001UC1I.PI_EKL         = CURSOR_POS;                       00002040
            IF FOS.PENSJONSINNTEKT_EKNR ^= 999 THEN                     00002050
               CALL SKRIV_FEIL(FOS.PENSJONSINNTEKT_EKNR );              00002060
         END;                                                           00002070
      IF FOS.ARBEIDSINNTEKT_EKNR = 0 THEN                               00002080
         S001UC1O.AI_EKA         = NOR_NUM;                             00002090
      ELSE                                                              00002100
         DO;                                                            00002110
            S001UC1O.AI_EKA         = DFHBMBRY;                         00002120
            S001UC1I.AI_EKL         = CURSOR_POS;                       00002130
            IF FOS.ARBEIDSINNTEKT_EKNR ^= 999 THEN                      00002140
               CALL SKRIV_FEIL(FOS.ARBEIDSINNTEKT_EKNR );               00002150
         END;                                                           00002160
                                                                        00002170
      IF FRA_UTEN_DIALOG THEN          /* BLOKKER ALT SAMMEN     */     00002180
         DO;                                                            00002190
           S001UC1O.PIA           = DFHBMASK;                           00002200
           S001UC1O.AIA           = DFHBMASK;                           00002210
           S001UC1O.PI_EKA        = DFHBMASK;                           00002220
           S001UC1O.AI_EKA        = DFHBMASK;                           00002230
         END;                                                           00002240
                                                                        00002250
   END OVERFØR_FO_SØKER2_MAP;                                           00002260
 %PAGE;                                /*   */                          00002270
 /* ***************************************************************** */00002280
 /*                                                                   */00002290
 /*   OVERFØRING FRA WORKAREA TIL MAP FOR BARNEDELEN                  */00002300
 /*                                                                   */00002310
 /* ***************************************************************** */00002320
 %SKIP(2);                                                              00002330
 OVERFØR_FO_BARN_MAP:                                                   00002340
   PROC;                                                                00002350
   DCL                                                                  00002360
      ANT_BARN FIXED BIN (15);                                          00002370
   DCL                                                                  00002380
      NORMAL  CHAR (1) INIT(' '),                                       00002390
      NOR_NUM CHAR (1) INIT('&'),                                       00002400
      BRI_NUM CHAR (1) INIT('Q');                                       00002410
 %SKIP;                                                                 00002420
                                                                        00002430
   /*CALL BLANK_FO_BARN_REST; */                                        00002440
                                                                        00002450
   DO ANT_BARN  = 1 TO FOS.BT_ANT;                                      00002460
      IF F_FELT_PIC_CHAR11(FOB.FNR_BARN(ANT_BARN)) ^= (11)'0' THEN      00002470
         DO;                                                            00002480
            S001UC1O.                                                   00002490
            FNR_BARNO (ANT_BARN) =                                      00002500
                        F_FELT_PIC_CHAR11(FOB.FNR_BARN(ANT_BARN));      00002510
            IF FOB.FNR_BARNNR(ANT_BARN) = 0 THEN                        00002520
               S001UC1O.FNR_BARNA(ANT_BARN)  = NOR_NUM;                 00002530
            ELSE                                                        00002540
               DO;                                                      00002550
                  S001UC1O.FNR_BARNA(ANT_BARN) = BRI_NUM;               00002560
                  S001UC1I.FNR_BARNL(ANT_BARN) = CURSOR_POS;            00002570
                  IF FOB.FNR_BARNNR(ANT_BARN) ^= 999 THEN               00002580
                    CALL SKRIV_FEIL(FOB.FNR_BARNNR(ANT_BARN));          00002590
               END;                                                     00002600
                                                                        00002610
            S001UC1O.RBT_E0591O(ANT_BARN) =                             00002620
                         FOB.FELLES_ETTER0591(ANT_BARN);                00002630
            IF FOB.FELLES_ETTER0591NR(ANT_BARN) = 0 THEN                00002640
               S001UC1O.RBT_E0591A(ANT_BARN) = NORMAL;                  00002650
            ELSE                                                        00002660
               DO;                                                      00002670
                  S001UC1O.RBT_E0591A(ANT_BARN) = DFHBMBRY;             00002680
                  S001UC1I.RBT_E0591L(ANT_BARN) = CURSOR_POS;           00002690
                  IF FOB.FELLES_ETTER0591NR(ANT_BARN) ^= 999 THEN       00002700
                    CALL SKRIV_FEIL(FOB.FELLES_ETTER0591NR(ANT_BARN));  00002710
               END;                                                     00002720
                                                                        00002730
            S001UC1O.RBT_F0591O(ANT_BARN) =                             00002740
                         FOB.FELLES_FØR0591(ANT_BARN);                  00002750
            IF FOB.FELLES_FØR0591NR(ANT_BARN) = 0 THEN                  00002760
               S001UC1O.RBT_F0591A(ANT_BARN) = NORMAL;                  00002770
            ELSE                                                        00002780
               DO;                                                      00002790
                  S001UC1O.RBT_F0591A(ANT_BARN) = DFHBMBRY;             00002800
                  S001UC1I.RBT_F0591L(ANT_BARN) = CURSOR_POS;           00002810
                  IF FOB.FELLES_FØR0591NR(ANT_BARN) ^= 999 THEN         00002820
                    CALL SKRIV_FEIL(FOB.FELLES_FØR0591NR(ANT_BARN));    00002830
               END;                                                     00002840
         END;                                                           00002850
   END;                                                                 00002860
                                                                        00002870
                                                                        00002880
      IF FRA_UTEN_DIALOG THEN          /* BLOKKER ALT SAMMEN     */     00002890
         CALL BLOKKERE_BARN;                                            00002900
                                                                        00002910
   END OVERFØR_FO_BARN_MAP;                                             00002920
