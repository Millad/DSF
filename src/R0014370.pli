 /*   SIST ENDRET PÅ PROD   2006.10.10 13.37.29 AV   JDA2990          */        
 /*   SIST ENDRET PÅ TEST   2006.09.07 10.08.39 AV   JDA2990          */        
 /*   SIST ENDRET PÅ PROD   2004.12.17 15.31.13 AV   JDA2970          */        
 /*   SIST ENDRET PÅ TEST   2004.07.13 13.22.40 AV   JDA2970          */        
 /*   SIST ENDRET PÅ PROD   2003.02.25 14.02.09 AV   JDA2970          */        
 /*   SIST ENDRET PÅ PROD   2002.02.27  7.27.45 AV   HLA2970          */        
 /*   SIST ENDRET PÅ PROD   2001.11.30 15.31.25 AV   HLA2970          */        
 /*   SIST ENDRET PÅ PROD   2000.04.17 12.53.31 AV   JDA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.03.22  9.51.15 AV   JDA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.03.16 11.43.35 AV   JDA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.03.01 10.45.46 AV   JDA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.01.14 12.41.25 AV   JDA7339          */        
 /*       SIST ENDRET 20/10-99 09.28.07 AV   JDA7339                  */        
 /*       SIST ENDRET 08/07-99 14.25.02 AV   HLA7339                  */        
 /*       SIST ENDRET 08/07-99 09.44.55 AV   HLA7339                  */        
 /*       SIST ENDRET 19/02-99 12.32.31 AV   JDA7339                  */        
 /*       SIST ENDRET 08/01-99 14.35.56 AV   JDA7339                  */        
 /*       SIST ENDRET 12/10-95 14.14.29 AV   JDA0310                  */        
 /* ***************************************************************** */        
 /* IDENTIFIKASJON                                                    */        
 /*     R0014370 - UE - EØS-REGLER      - HOVEDPROG                   */        
 /*     PROGRAMMERER: HERMAN LARSSEN 0195                             */        
 /* HENSIKT                                                           */        
 /*     BEREGNE ETTERLATTEPENSJON ETTER EØS-REGLER                    */        
 /*     OPPDATERER ETTEPENS PÅ GJENLEVENDE                            */        
 /*     OPPDATERER STATUS   PÅ GJENLEVENDE & AVDØDE                   */        
 /*     OPPDATERER EØS      PÅ AVDØDE                                 */        
 /* PROGRAMTILKNYTNING.                                               */        
 /*     PROSEDYREN BLIR LINKET FRA  R0014001                          */        
 /* ***************************************************************** */        
 UEXEØS: PROC (COMMAREA_PEKER) OPTIONS(MAIN);                                   
    /* -------------------------------------------------------------- */        
    %INCLUDE P0014002;  /* W_POREKKE                   */                       
    %INCLUDE P0014003;  /* TAB                         */                       
    %INCLUDE P0014009;  /* POREKKE                     */                       
    %INCLUDE P0019906;  /* TRAMS_OPPL_OMR              */                       
    %INCLUDE P0019908;  /* PEKER_LISTE                 */                       
    %INCLUDE P0019910;  /* STYRINGS_OMR                */                       
    %INCLUDE P0019912;  /* DIV_PARAM_OMR               */                       
    %INCLUDE P0019924;  /* GV_TAB_RE                   */                       
    %INCLUDE P0019980; /* DEFINERING AV FNR11/13 SØKER & EKTEFELLE */           
    %INCLUDE P0019985;  /* VARIABLER VED EØS BEREGNING */                       
    DCL 1 B01 BASED (B01_PEKER), %INCLUDE P0019921;                             
    DCL 1 B02 BASED (B02_PEKER), %INCLUDE P0019921;                             
    /* -------------------------------------------------------------- */        
    DCL COMMAREA_PEKER PTR;                                                     
    DCL                                                                         
        FRADRAG_F                     DEC FIXED (7)   INIT (0),                 
        G_HALVE                       DEC FIXED (7)   INIT (0);                 
   DCL                                                                          
        DØDSDATO_ÅMD                         PIC '(8)9' INIT (0),               
        DØDSDATO_ÅM  DEF DØDSDATO_ÅMD POS(1) PIC '(6)9',                        
        DØDSÅR       DEF DØDSDATO_ÅMD POS(1) PIC '(4)9',                        
        MINSTEVILKÅR                  FIXED DEC (5,2) INIT (0),                 
        NORSK_PENSJON_SUM             FIXED DEC (7)   INIT (0),                 
        OPPTJENINGSPERIODEN           FIXED DEC (3)   INIT (0),                 
        TIL_ÅR                        PIC      '(4)9' INIT (0),                 
        TT_FRAMT_MAX                  FIXED DEC (3)   INIT (0);                 
   DCL                                                                          
       (                                                                        
        VERIFY                                                                  
       )                              BUILTIN;                                  
   DCL                                                                          
        VIRK_LOV92_ÅM                 PIC      '(6)9' INIT (0),                 
        W_STI_ÅM                      PIC '(6)9'      INIT (0),                 
        W_TT_FRAM_TIL_DATO            PIC '(6)9'      INIT (0),                 
        W_STI_ÅR                      PIC '(4)9' DEF W_STI_ÅM POS(1),           
        W_STI_MND                     PIC '(2)9' DEF W_STI_ÅM POS(5),           
        W_TT_FRAM_TIL_ÅR DEF W_TT_FRAM_TIL_DATO POS (1) PIC '9999',             
        W_TT_FRAM_TIL_MND DEF W_TT_FRAM_TIL_DATO POS (5) PIC '99';              
                                                                                
    /* ============================================================== */        
    CALL NULLSTILL_P0019985;                                                    
    CALL INITIER;                                                               
    CALL FINN_TT_FAKTISK(BER_EK_IND); /* 4471 */                                
    PROGRAM_ID = 'R0014370';                                                    
    CALL TELL_FAKTISKE_POENGÅR;                                                 
    CALL REGN_TRYGDETID;                                                        
 /* CALL KONTROLL_OPPGITT_TRYGDETID  */                                         
    IF (FEIL_MELD_NR = 0) THEN                                                  
       DO;                                                                      
          IF (W_PÅ_FAKTISKE(1) > 0) THEN                                        
             DO;  /* MÅ HA NORSKE POENGÅR! */                                   
                CALL REGN_POENGÅR;                                              
                CALL REGN_BUP_SPT;                                              
             END; /* MÅ HA NORSKE POENGÅR! */                                   
          CALL FINN_BELØP;                                                      
          IF B02.FRADRAG_2G(BER_SØ_IND)  = 'J'    &                             
             (G * 2)  > (B02.FORVENTET(BER_SØ_IND) * 100)  THEN                 
             DO;                                                                
                DIV_PARAM_OMR.FRADRAG_2G = 'J';                                 
                FRADRAG_F = G * 2;                                              
             END;                                                               
          ELSE                                                                  
             FRADRAG_F = (B02.FORVENTET(BER_SØ_IND) * 100);                     
          G_HALVE   = G / 2;                                                    
          FRADRAG_F = FRADRAG_F - G_HALVE;                                      
          IF (FRADRAG_F > 0)     THEN                                           
             CALL FORVENTET_INNTEKT;                                            
          IF (B02.BEREGN_FOLKETRYGD(BER_SØ_IND) = 'N' !                         
              B02.NORDISK_KONVENSJON(BER_SØ_IND)= 'J' ) THEN                    
             W_SKAL_BEREGNES(1) = '0'B;                                         
          CALL FINN_HØGSTE_YTELSE;                                              
          CALL OPPDATER;                                                        
       END;                                                                     
 /* ----------------------------------------------------------------- */        
 INITIER : PROC;                                                                
    POTALL_OPPL.IND = BER_EK_IND;  /*?*/                                        
    B01_B02_IND     = 2;                                                        
    IND             = BER_EK_IND;                                               
    DO J = 2 TO HBOUND(B02.UFØRHIST,2);                                         
       IF (B02.UFT_ÅMD(BER_SØ_IND,J)   = 0 &                                    
           B02.UFT_ÅMD(BER_SØ_IND,J-1) > 0 ) THEN                               
          DO;  /* FINN GUNSTIGSTE */                                            
             UF_IND = J - 1;                                                    
             DO K = 2 TO HBOUND(B02.UFØRGRAD,3);                                
                IF B02.UFG_DATO_ÅMD(BER_SØ_IND,J,K) >                           
                   B02.UFG_DATO_ÅMD(BER_SØ_IND,J,K-1) THEN                      
                      UF_IND2 = B02.UFG_DATO_ÅMD(BER_SØ_IND,J,K);               
             END; /* DO K = 2 TO SISTE ELEMENT I UFØRGRAD */                    
          END; /* FINN GUNSTIGSTE */                                            
    END; /* DO J = 2 TO SISTE ELEMENT I UFØRGRAD */                             
    W_FNR           = B02.FNR(BER_SØ_IND);                                      
    W_FNR_13        = KONV_FNR11_FNR13(W_FNR);                                  
    W_FNR_EK        = B02.FNR(BER_EK_IND);                                      
    W_FNR_EK_13     = KONV_FNR11_FNR13(W_FNR_EK);                               
                                                                                
    W_POREKKE             = POREKKE (BER_EK_IND);                               
  /* POREKKE(BER_SØ_IND)   = ''  */                                             
    DØDSDATO_ÅMD = B02.DØDSDATO_ÅMD(BER_EK_IND);                                
    SM_PÅ = DØDSÅR-1;                                                           
    FM_PÅ =                                                                     
        MAX( W_FNR_EK_R13.ÅR+17                                                 
           , 1967);                                                             
    IF (B02.ETTEPENS.STI_ÅMD(BER_SØ_IND) > 0) THEN                              
       W_STI_ÅM = FLOOR(B02.ETTEPENS.STI_ÅMD(BER_SØ_IND)/100);                  
    ELSE                                                                        
       W_STI_ÅM = DØDSDATO_ÅM;                                                  
     /* PENSJON REGNES ALLTID OGSÅ ETTER "NORMALE" REGLER             */        
     W_SKAL_BEREGNES(1) = '1'B;                                                 
     /* KONTROLL OM PENSJON SKAL REGNES ETTER EØS ART 46 NR 2         */        
     IF (B02.TT_PRO_RATA_MND(BER_EK_IND)      +                                 
         B02.TT_TEORETISK_EØS_MND(BER_EK_IND) > 0 ) THEN                        
        DO;  /* BEREGNES ETTER ART 46 NR 2 */                                   
           W_SKAL_BEREGNES(2) = '1'B;                                           
           B02.PRO_RATA_BEREGNING(BER_EK_IND) = 'J';                            
        END; /* BEREGNES ETTER ART 46 NR 2 */                                   
     ELSE                                                                       
  /*                                                                            
  A: DO I = 1967 TO 2006 */                                                     
  A: DO I = LBOUND(B02.INNTEKTSÅR_EØS,2) TO                                     
            HBOUND(B02.INNTEKTSÅR_EØS,2);                                       
        IF (B02.INNTEKTSÅR_EØS(BER_EK_IND,I)='1'B)THEN                          
           DO;  /* BEREGNES ETTER ART 46 NR 2 */                                
              W_SKAL_BEREGNES(2) = '1'B;                                        
              B02.PRO_RATA_BEREGNING(BER_EK_IND) = 'J';                         
              LEAVE A;                                                          
           END; /* BEREGNES ETTER ART 46 NR 2 */                                
     END;                                                                       
     /* KONTROLL OM PENSJON SKAL REGNES ETTER EØS ART 49 NR 1 B       */        
  /* IF B02.PRO_RATA_BEREGNING = 'J' THEN                                       
        W_SKAL_BEREGNES(3) = 'J'+ SEMIKOLON                                     
     ELSE */                                                                    
        W_SKAL_BEREGNES(3) = '0'B;                                              
                                                                                
     /* KONTROLL OM PENSJON SKAL REGNES ETTER NORDISK KONVENSJON      */        
     IF (B02.TT_NORDISK_FAKT_MND(BER_EK_IND) +                                  
         B02.PÅ_NORDISK_FAKT(BER_EK_IND)     > 0 ) THEN                         
        DO;                                                                     
           B02.NORDISK_KONVENSJON(BER_EK_IND) = 'J';                            
           W_SKAL_BEREGNES(4) = '1'B;                                           
        END;                                                                    
     ELSE                                                                       
        W_SKAL_BEREGNES(4) = '0'B;                                              
     /* KONTROLL OM VILKÅR PARAGRAF 3-17A ER OPPFYLLT                 */        
     IF (B02.STATUS.VILKÅR_8_4_3A(BER_EK_IND) = 'J') THEN                       
        DO;                                                                     
           W_PÅ_RETT_TIL_FRAMTIDIGE(1) = '1'B;                                  
           W_PÅ_RETT_TIL_FRAMTIDIGE(2) = '1'B;                                  
           W_PÅ_RETT_TIL_FRAMTIDIGE(3) = '1'B;                                  
           W_PÅ_RETT_TIL_FRAMTIDIGE(4) = '1'B;                                  
        END;                                                                    
     ELSE                                                                       
        IF (B02.EØS_8_4_3A(BER_EK_IND) = 'J') THEN                              
           DO;                                                                  
              W_PÅ_RETT_TIL_FRAMTIDIGE(2) = '1'B;                               
              W_PÅ_RETT_TIL_FRAMTIDIGE(2) = '1'B;                               
           END;                                                                 
                                                                                
     /* KONTROLL PARAGRAF 3-17 ETTER NASJONAL/NORDISK */                        
     IF (W_PÅ_RETT_TIL_FRAMTIDIGE(1) = '0'B &                                   
         W_SKAL_BEREGNES(1)                 ) !                                 
        (W_PÅ_RETT_TIL_FRAMTIDIGE(4) = '0'B &                                   
         W_SKAL_BEREGNES(4)                 ) THEN                              
        IF (FYLLER_VILKÅR_3_17_NASJONAL(BER_EK_IND,FM_PÅ,SM_PÅ)) THEN           
           DO I = 1 TO 4;                                                       
              IF W_SKAL_BEREGNES(I) THEN                                        
                 W_PÅ_RETT_TIL_FRAMTIDIGE(I) = '1'B;                            
           END;                                                                 
                                                                                
     /* KONTROLL PARAGRAF 3-17 ETTER EØS-REGLENE */                             
     IF (W_PÅ_RETT_TIL_FRAMTIDIGE(2) = '0'B) &                                  
        (W_SKAL_BEREGNES(2)                  ) THEN                             
        W_PÅ_RETT_TIL_FRAMTIDIGE(2) = FYLLER_VILKÅR_3_17_EØS                    
                    (BER_EK_IND,FM_PÅ,SM_PÅ);                                   
  END INITIER;                                                                  
 /* ----------------------------------------------------------------- */        
  TELL_FAKTISKE_POENGÅR: PROC;                                                  
     /* ------------------------------------------------------------ */         
     /* FØRST KONTROLLERER OG TELLER VI OPP FAKTISKE POENGÅR         */         
     /* ------------------------------------------------------------ */         
     DO I = FM_PÅ TO SM_PÅ;                                                     
        IF POREKKE.POENG(BER_EK_IND,I) > 0 THEN                                 
           DO; /* NORSKE POENGÅR, TELL OPP */                                   
              IF I>1991 THEN                                                    
                 W_PÅ_ETTER_91(1) =                                             
                    + W_PÅ_ETTER_91(1) + 1;                                     
              W_PÅ_FAKTISKE(1) = W_PÅ_FAKTISKE(1) + 1;                          
           END;/* NORSKE POENGÅR, TELL OPP */                                   
        ELSE                                                                    
           DO; /* IKKJE GODSKREVET PENSJONSPOENG I NORGE, EØS-ÅR? */            
              IF B02.INNTEKTSÅR_EØS(BER_EK_IND,I) THEN                          
                 DO;                                                            
                    IF I>1991 THEN                                              
                       W_PÅ_ETTER_91(2)= + W_PÅ_ETTER_91(2) + 1;                
                    W_PÅ_FAKTISKE(2) = W_PÅ_FAKTISKE(2) + 1;                    
                 END;                                                           
     /*       IF B02.INNTEKTSÅR_EØS2(BER_SØ_IND,I) THEN                         
                 DO                                                             
                    IF I>91 THEN                                                
                       W_PÅ_ETTER_91(3)= + W_PÅ_ETTER_91(3) + 1 SEMI            
                    W_PÅ_FAKTISKE(3) = W_PÅ_FAKTISKE(3) + 1 SEMI                
                 END                                                            
     */    END;/* IKKJE GODSKREVET PENSJONSPOENG I NORGE, EØS-ÅR? */            
     END; /* TELL OPP FAKTISKE POENGÅR I NORGE/EØS OMRÅDET */                   
     IF W_SKAL_BEREGNES(4) THEN                                                 
        W_PÅ_FAKTISKE(4) = B02.PÅ_NORDISK_FAKT(BER_EK_IND);                     
  END TELL_FAKTISKE_POENGÅR;                                                    
 /* ----------------------------------------------------------------- */        
  REGN_TRYGDETID : PROC;                                                        
     /* ------------------------------------------------------------- */        
     /* BEREGNER MULIG TRYGDETID VED FULL BOTID TIL UFØRETIDSPUNKT    */        
     /* ------------------------------------------------------------- */        
     OPPTJENINGSPERIODEN=                                                       
        + ( W_STI_ÅR - W_FNR_EK_R13.ÅR - 16 ) * 12                              
        + ( W_STI_MND - W_FNR_EK_R13.MND - 1 );                                 
     /* BEREGNER MINSTEVILKÅR FOR FULL GODSKRIVING AV FRAMTIDIG TT  */          
     MINSTEVILKÅR  = OPPTJENINGSPERIODEN * .80;      /*AVRUNDES IKKE*/          
     /* BEREGNER HVOR LANGT FRAM TRYGDETID SKAL BEREGNES             */         
     SELECT;                     /* W_STI_ÅM)                         */        
        WHEN (W_STI_ÅR < 1973)                                                  
           DO;                      /* NÅR STØNADSTILFELLET INNTRER   */        
              W_TT_FRAM_TIL_DATO =  /* FØR 1973 SKAL EIN REKNE UT     */        
                 ( + W_FNR_EK_R13.ÅR/* FRAMTIDIG TRYGDETID TIL OG MED */        
                   + 70             /* DEN MÅNADEN DEN TRYGDA FYLLER  */        
                 ) * 100            /* 70 ÅR. FRAMTIDIGE BUP ÅR MAKS  */        
                + W_FNR_EK_R13.MND; /* TIL VEDK. FYLLER 69 ÅR         */        
              SM_BUP_ÅR = W_FNR_EK_R13.ÅR + 69;                                 
           END;                                                                 
        OTHERWISE                                                               
           DO;                      /* NÅR STØNADSTILFELLET INNTRER   */        
              W_TT_FRAM_TIL_DATO =  /* ETTER 1972 SKAL FRAMTIDIG      */        
                 ( + W_FNR_EK_R13.ÅR/* TRYGDETID REKNAST FRAM TIL OG  */        
                   + 66             /* MED DESEMBER DET ÅRET MEDLEMET */        
                 ) * 100            /* TRYGDA FYLLER 66 ÅR. FRAMTIDIGE*/        
                   + 12;           /* BUP ÅR MAKS TIL VEDK. FYLLER   */         
              SM_BUP_ÅR = W_FNR_EK_R13.ÅR + 66; /* 66 ÅR */                     
           END;                                                                 
     END;                                                                       
     TT_FRAMT_MAX =              /* I DENNE VARIABELEN LEGGES I HVOR  */        
        (   W_TT_FRAM_TIL_ÅR     /* MANGE MÅNEDER VI MAKSIMALT KAN    */        
          - W_STI_ÅR             /* BENYTTE FOR BEREGNING AV FRAM-    */        
        ) * 12                   /* TIDIG TRYGDETID                   */        
          + W_TT_FRAM_TIL_MND                                                   
          - W_STI_MND                                                           
          + 1;                                                                  
     /* ------------------------------------------------------------- */        
     /* BEREGNER FRAMTIDIG TRYGDETID I ANTALL MÅNEDER                */         
     /* ------------------------------------------------------------- */        
     DO I = 1 TO 4;                                                             
        IF (W_TT_FAKTISK_MND(I) > 0 &                                           
            W_SKAL_BEREGNES(I)      ) !                                         
            I=1                      THEN                                       
           DO; /* BEREGN FRAMTIDIG TRYGDETID */                                 
              IF I = 4 THEN                                                     
                 J = 1;                                                         
              ELSE                                                              
                 J = I;                                                         
              IF (MINSTEVILKÅR > W_TT_FAKTISK_MND(J)        ) &                 
                 ((W_STI_ÅR    > 1991 & ( I = 1 ! I = 4 ) ) !                   
                  (I = 2 ! I = 3                          ) ) THEN              
                 DO;                                                            
                     /* --------------------------------------------- */        
                     /* BEREGN REDUSERT FRAMTIDIG TRYGDETID           */        
                     /* ***********************************           */        
                     /* FOR DEM SOM HAR BODD I UTLANDET, VIL FRAM-    */        
                     /* TIDIG TRYGDETID KUNNE BLI BEGRENSET MED       */        
                     /* VIRKNING FRA 1.1.91. JFR. R001N824            */        
                     /* --------------------------------------------- */        
                     /* DETTE GJELDER OGSÅ DERSOM:                    */        
                     /*   - NY UFT > 91, GAMMEL UFT < 91              */        
                     /*   - GAMMEL UFT < 91 AVSLUTTET OG NY UFT > 91? */        
                     /*   KARI SANNES MÅ SE PÅ DETTE                  */        
                     /* --------------------------------------------- */        
                    IF I = 4 THEN                                               
                       W_TT_FRAMTIDIG_MND(I) =                                  
                          ( 480 - MINSTEVILKÅR)                                 
                          * W_TT_FAKTISK_MND(1)                                 
                          / MIN(480,                                            
                                W_TT_FAKTISK_MND(4)                             
                               )                                                
                          + 0.5;                                                
                    ELSE                                                        
                       W_TT_FRAMTIDIG_MND(I)=                                   
                          ( 480 - MINSTEVILKÅR)                                 
                          + 0.5;                                                
                    IF W_TT_FRAMTIDIG_MND(I) < 0 THEN                           
                       W_TT_FRAMTIDIG_MND(I) = 0;                               
                    W_REDUSERT_ANT_BUP_ÅR(I) =                                  
                       W_TT_FRAMTIDIG_MND(I)/12+0.5;                            
                    TIL_ÅR =                                                    
                       + SM_PÅ                                                  
                       + W_REDUSERT_ANT_BUP_ÅR(I);                              
                    IF SM_BUP_ÅR = TIL_ÅR THEN                                  
                       W_REDUSERT_ANT_BUP_ÅR(I) = 0;                            
                 END;                                                           
              ELSE /* BEREGN FULL FRAMTIDIG TRYGDETID */                        
                 DO;                                                            
                    W_TT_FRAMTIDIG_MND(I) = TT_FRAMT_MAX;                       
                    W_REDUSERT_ANT_BUP_ÅR(I) =                                  
                       SM_BUP_ÅR - SM_PÅ;                                       
                 END;                                                           
              /* BEREGN ANV_MND & ANV_ÅR TRYGDETID */                           
              IF I = 2 THEN                                                     
                 W_TT_ANV_MND(I)=                                               
                    MIN( + W_TT_TEORETISK_MND(J)                                
                         + W_TT_FRAMTIDIG_MND(I)                                
                       , 480);                                                  
              ELSE                                                              
                 W_TT_ANV_MND(I) =                                              
                    MIN( + W_TT_FAKTISK_MND(J)                                  
                         + W_TT_FRAMTIDIG_MND(I)                                
                       , 480);                                                  
              W_TT_ANV_ÅR(I)=                                                   
                 W_TT_ANV_MND(I)/12+0.5;                                        
           END; /* BEREGN FRAMTIDIG TRYGDETID */                                
     END; /* I = 1 TO 4 */                                                      
  END REGN_TRYGDETID;                                                           
 /* ----------------------------------------------------------------- */        
  KONTROLL_OPPGITT_TRYGDETID : PROC;                                            
      /* ----------------------------------------------------------- */         
      /* KONTROLL GJENNOMFØRES, OG VED EVENTUELLE FEIL VIL DET       */         
      /* BLI LAGT INN FEILMELDIGSNUMMER I DIV_PARAM_OMR              */         
      /* ----------------------------------------------------------- */         
      DCL MIN_TT_IFLG_PÅ               FIXED DEC (3) INIT (0);                  
      /* ----------------------------------------------------------- */         
      /* VI KONTROLLERER FØRST OM OPPGITT TRYGDETID ER MINDRE ENN    */         
      /* ANTALL POENGÅR SOM ER GODSKREVET, JAMFØR 7-2 NR. 1          */         
      /* ----------------------------------------------------------- */         
      MIN_TT_IFLG_PÅ = W_PÅ_FAKTISKE(1) * 12;                                   
      IF  (TRANS_OPPL_OMR.TRANSTYPE  ^= 27) THEN                                
         DO;  /* VI KONTOLLERER IKKE VED SATSENDRING */                         
            IF W_TT_FAKTISK_MND(1) < MIN_TT_IFLG_PÅ THEN                        
               DO;                                                              
                   FEIL_VED_LABEL = '422';                                      
                   FEIL_MELD_NR = 422;                                          
               END;                                                             
            /* ----------------------------------------------------- */         
            /* KONTROLLERER OM SUM NORSK OG EØS TRYGDETID ER STØRRE  */         
            /* ENN OPPTJEINGSPERIODEN +1 -> BLANKETTEN AVVISES       */         
            /* ----------------------------------------------------- */         
            /* 25.03.98 KOMMENTERT UT - BRUKER FØRSTE UFØRETIDSPUNKT */         
            IF W_SKAL_BEREGNES(2) THEN                                          
               IF W_TT_FAKTISK_MND(2) > OPPTJENINGSPERIODEN + 2 THEN            
                  DO;                                                           
                     FEIL_VED_LABEL = '423';                                    
                     FEIL_MELD_NR = 423;                                        
                  END;                                                          
            /* ----------------------------------------------------- */         
            /* KONTROLLERER OM SUM NORSK OG NORDISK TRYGDETID ER     */         
            /* STØRRE ENN OPPTJEINGSPERIODEN +2-> BLANKETTEN AVVISES */         
            /* ----------------------------------------------------- */         
            IF W_SKAL_BEREGNES(4) THEN                                          
               IF W_TT_FAKTISK_MND(4) > OPPTJENINGSPERIODEN+2 THEN              
                  DO                                                            
                      FEIL_VED_LABEL = '424';                                   
                      FEIL_MELD_NR = 424;                                       
                  END;                                                          
         END; /* VI KONTOLLERER IKKE VED SATSENDRING */                         
  END KONTROLL_OPPGITT_TRYGDETID;                                               
 /* ----------------------------------------------------------------- */        
  REGN_POENGÅR : PROC;                                                          
     DO I=4 TO 1 BY -1;                                                         
        IF W_SKAL_BEREGNES(I) THEN                                              
           DO;                                                                  
              SELECT (I);                                                       
                 WHEN (1) /* BEREGN NORSK PENSJON */                            
                    DO;                                                         
                       IF W_PÅ_RETT_TIL_FRAMTIDIGE(I) THEN                      
                          IF (W_TT_FRAMTIDIG_MND(1) =                           
                              TT_FRAMT_MAX           ) THEN                     
                             W_PÅ_FRAMTIDIGE(1) =                               
                                SM_BUP_ÅR - SM_PÅ;                              
                          ELSE                                                  
                             W_PÅ_FRAMTIDIGE(1) =                               
                                W_TT_FRAMTIDIG_MND(1)/12+0.5;                   
                       IF W_PÅ_FAKTISKE(1)+W_PÅ_FRAMTIDIGE(1) > 40 THEN         
                          DO;                                                   
                             W_PÅ_ANV(1) = 40;                                  
                             W_PÅ_ETTER_91(1)=                                  
                                + 40                                            
                                - W_PÅ_FAKTISKE(1)                              
                                + W_PÅ_ETTER_91(1);                             
                          END;                                                  
                       ELSE                                                     
                          DO;                                                   
                             W_PÅ_ANV(1) =                                      
                                + W_PÅ_FAKTISKE(1)                              
                                + W_PÅ_FRAMTIDIGE(1);                           
                             W_PÅ_ETTER_91(1) =                                 
                                + W_PÅ_ETTER_91(1)                              
                                + W_PÅ_FRAMTIDIGE(1);                           
                          END;                                                  
                    END;                                                        
                 WHEN (2) /* PRO RATA 1 */                                      
                    DO;                                                         
                       W_PÅ_FAKTISKE(2) =                                       
                          W_PÅ_FAKTISKE(2) + W_PÅ_FAKTISKE(1);                  
                       IF (W_PÅ_RETT_TIL_FRAMTIDIGE(I) &                        
                           W_PÅ_FAKTISKE(1) > 0        ) THEN                   
                          IF (W_TT_FRAMTIDIG_MND(2) =                           
                              TT_FRAMT_MAX           ) THEN                     
                             W_PÅ_FRAMTIDIGE(2) =                               
                                SM_BUP_ÅR - SM_PÅ;                              
                          ELSE                                                  
                             W_PÅ_FRAMTIDIGE(2) =                               
                                W_TT_FRAMTIDIG_MND(2)/12+0.5;                   
                       IF W_PÅ_FAKTISKE(2)+W_PÅ_FRAMTIDIGE(2) > 40 THEN         
                          DO;  /* OVER 40 POENGÅR EØS */                        
                             W_PÅ_ANV(2) = 40;                                  
                             W_PÅ_ETTER_91(2) =                                 
                                + 40                                            
                                - W_PÅ_FAKTISKE(2)                              
                                + W_PÅ_ETTER_91(2)                              
                                + W_PÅ_ETTER_91(1)                              
                                - W_PÅ_FRAMTIDIGE(1);                           
                             IF (W_PÅ_FAKTISKE(1)                               
                                 + W_PÅ_FRAMTIDIGE(1) > 40) THEN                
                             /* RED GRUNNA DÅRLIG STRUKTUR */                   
                             W_PÅ_ETTER_91(2) =                                 
                                + W_PÅ_ETTER_91(2)                              
                                - 40                                            
                                + W_PÅ_FAKTISKE(1)                              
                                + W_PÅ_FRAMTIDIGE(1);                           
                          END; /* OVER 40 POENGÅR EØS */                        
                       ELSE                                                     
                          DO;  /* UNDER 40 POENGÅR EØS */                       
                             W_PÅ_ANV(2) =                                      
                                + W_PÅ_FAKTISKE(2)                              
                                + W_PÅ_FRAMTIDIGE(2);                           
                             W_PÅ_ETTER_91(2) =                                 
                                + W_PÅ_ETTER_91(2)                              
                                + W_PÅ_FRAMTIDIGE(2)                            
                                + W_PÅ_ETTER_91(1)                              
                                - W_PÅ_FRAMTIDIGE(1);                           
                          END; /* UNDER 40 POENGÅR  EØS */                      
                    END;                                                        
                 WHEN (3) /* PRO RATA 2 */                                      
                    DO;                                                         
                    END;                                                        
                 WHEN (4) /* NORDISK */                                         
                    DO;                                                         
                       IF W_PÅ_RETT_TIL_FRAMTIDIGE(I) THEN                      
                          DO;  /* HAR RETT PÅ BUP */                            
                             IF (DØDSÅR>1990                     &              
                                 MINSTEVILKÅR>W_TT_FAKTISK_MND(1)) THEN         
                                 W_PÅ_FRAMTIDIGE(4) =                           
                                    W_TT_FRAMTIDIG_MND(1)                       
                                    / 12                                        
                                    + 0.5;                                      
                             ELSE                                               
                                IF (W_TT_FRAMTIDIG_MND(1) =                     
                                    TT_FRAMT_MAX           ) THEN               
                                   W_PÅ_FRAMTIDIGE(4) =                         
                                      SM_BUP_ÅR - SM_PÅ;                        
                             W_REDUSERT_ANT_BUP_ÅR(4) =                         
                                W_PÅ_FRAMTIDIGE(4);                             
                             W_PÅ_FRAMTIDIGE(4) =                               
                                + W_PÅ_FRAMTIDIGE(4)                            
                                * W_PÅ_FAKTISKE(1)                              
                                / (W_PÅ_FAKTISKE(4) + W_PÅ_FAKTISKE(1))         
                                + 0.5;                                          
                             W_PÅ_ANV(4) =                                      
                                + W_PÅ_FAKTISKE(1)                              
                                + W_PÅ_FRAMTIDIGE(4);                           
                             W_PÅ_ETTER_91(4) =                                 
                                + W_PÅ_ETTER_91(1)                              
                                + W_PÅ_FRAMTIDIGE(4)                            
                                - W_PÅ_FRAMTIDIGE(1);                           
                          END; /* HAR RETT PÅ BUP */                            
                       ELSE                                                     
                          DO;  /* HAR IKKE RETT PÅ BUP */                       
                             W_PÅ_ANV(4) = W_PÅ_FAKTISKE(1);                    
                             W_PÅ_ETTER_91(4) = W_PÅ_ETTER_91(1);               
                             W_REDUSERT_ANT_BUP_ÅR(4) = 0;                      
                             W_PÅ_FRAMTIDIGE(4) = 0;                            
                          END; /* HAR IKKE RETT PÅ BUP */                       
                    END;                                                        
                 OTHERWISE;                                                     
              END; /* SELECT I */                                               
              IF W_PÅ_ANV(I) > 40 THEN                                          
                 DO;                                                            
                    W_PÅ_ETTER_91(I) =                                          
                       + W_PÅ_ETTER_91(I)                                       
                       - W_PÅ_ANV(I)                                            
                       + 40;                                                    
                    W_PÅ_ANV(I) = 40;                                           
                 END;                                                           
              IF W_STI_ÅR < 1992 THEN                                           
                 W_PÅ_ETTER_91(I) = 0;                                          
           END; /* W_SKAL_BEREGNES(I) */                                        
     END; /* DO I = 1 TO 4 */                                                   
  END REGN_POENGÅR;                                                             
  /* *************************************************************** */         
  REGN_BUP_SPT : PROC;                                                          
     /* ------------------------------------------------------------ */         
     /*  DEKLARERER VARIABLER SOM KUN BENYTTES I DENNE PROCEDURE     */         
     /* ------------------------------------------------------------ */         
     DCL BEREGNET_BUP          FIXED DEC (03,2) INIT(0    ) ,                   
         J                     FIXED DEC ( 5  ) INIT(0    ) ,                   
         L                     FIXED BIN (15  ) INIT(0    ) ,                   
         M                     FIXED BIN (15  ) INIT(0    ) ,                   
         HALVPARTEN            PIC       '(3)9' INIT(1    ) ,                   
         POENG_SISTE_3ÅR       FIXED DEC (05,2) INIT(0    ) ,                   
         POENG_1ÅR_FØR_DØD     FIXED DEC (03,2) INIT(0    ) ,                   
         POENG_2ÅR_FØR_DØD     FIXED DEC (03,2) INIT(0    ) ,                   
         POENG_3ÅR_FØR_DØD     FIXED DEC (03,2) INIT(0    ) ,                   
         RUNDING               FIXED DEC (05,3) INIT(0.005) ,                   
         SORTERTE_POENG(50)    FIXED DEC (05,3)             ,                   
         SORTERTE_POENG_92(50) FIXED DEC (05,3)             ,                   
         SUM_BUP               FIXED DEC (07,3) INIT (0   ) ,                   
         SUM_OPT               FIXED DEC (07,3) INIT (0   ) ,                   
         SUM_POENGTALL         FIXED DEC (07,3) INIT (0   ) ,                   
         SUM_POENGÅR           FIXED DEC (03  ) INIT (0   ) ;                   
     /* ------------------------------------------------------------ */         
     /* VI LEGGER POENGREKKA INN I ARBEIDSVARIABLENE                 */         
     /* ------------------------------------------------------------ */         
     SORTERTE_POENG(*) = 0;                                                     
     SORTERTE_POENG_92(*) = 0;                                                  
     W_POREKKE = POREKKE (BER_EK_IND);                                          
     /* ------------------------------------------------------------ */         
     /*  BEREGNER SNITTET AV DE TRE SISTE POENGÅRENE, HER ER ENNO    */         
     /*  IKKJE LAGT INN EVT. KORREKSJON FOR OMSORGSPOENG             */         
     /* ------------------------------------------------------------ */         
     IF (SM_PÅ < 1992) THEN                                                     
        IF (W_POREKKE.POENG(SM_PÅ) > 5.00) THEN                                 
           IF (W_POREKKE.POENG(SM_PÅ) > 7.00) THEN                              
              POENG_1ÅR_FØR_DØD =                                               
                 W_POREKKE.POENG(SM_PÅ) - 7 + 5 +2/3 + RUNDING;                 
           ELSE                                                                 
              POENG_1ÅR_FØR_DØD =                                               
                 + 5                                                            
                 + (W_POREKKE.POENG(SM_PÅ)-5) * 1/3 + RUNDING;                  
        ELSE                                                                    
           POENG_1ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ);                          
     ELSE                                                                       
        POENG_1ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ);                             
                                                                                
     IF (SM_PÅ-1 < 1992) THEN                                                   
        IF (W_POREKKE.POENG(SM_PÅ-1) > 5.00) THEN                               
           IF (W_POREKKE.POENG(SM_PÅ-1) > 7.00) THEN                            
              POENG_2ÅR_FØR_DØD =                                               
                 W_POREKKE.POENG(SM_PÅ-1) - 7 + 5 +2/3 + RUNDING;               
           ELSE                                                                 
              POENG_2ÅR_FØR_DØD =                                               
                 + 5                                                            
                 + (W_POREKKE.POENG(SM_PÅ-1)-5) * 1/3 + RUNDING;                
        ELSE                                                                    
           POENG_2ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ-1);                        
     ELSE                                                                       
        POENG_2ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ-1);                           
                                                                                
     IF (SM_PÅ-2 < 1992) THEN                                                   
        IF (W_POREKKE.POENG(SM_PÅ-2) > 5.00) THEN                               
           IF (W_POREKKE.POENG(SM_PÅ-2) > 7.00) THEN                            
              POENG_3ÅR_FØR_DØD =                                               
                 W_POREKKE.POENG(SM_PÅ-2) - 7 + 5 +2/3 + RUNDING;               
           ELSE                                                                 
              POENG_3ÅR_FØR_DØD =                                               
                 + 5                                                            
                 + (W_POREKKE.POENG(SM_PÅ-2)-5) * 1/3 + RUNDING;                
        ELSE                                                                    
           POENG_3ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ-2);                        
     ELSE                                                                       
        POENG_3ÅR_FØR_DØD = W_POREKKE.POENG(SM_PÅ-2);                           
                                                                                
     POENG_SISTE_3ÅR =                                                          
        ( POENG_1ÅR_FØR_DØD                                                     
        + POENG_2ÅR_FØR_DØD                                                     
        + POENG_3ÅR_FØR_DØD ) / 3 + RUNDING;                                    
                                                                                
     /* ------------------------------------------------------------ */         
     HALVPARTEN =                                                               
        MIN((SM_PÅ - FM_PÅ + 1)/2 + 0.5                                         
           ,20);                                                                
     /* ------------------------------------------------------------ */         
     /*  SORTERER ALLE POENGÅR SLIK AT ELEMENT 1 INNEHOLDER HØYESTE  */         
     /* ------------------------------------------------------------ */         
     DO I = 1 TO 50;                                                            
        DO J = FM_PÅ TO SM_PÅ;                                                  
           IF W_POREKKE.POENG(J) > SORTERTE_POENG(I) THEN                       
              DO;                                                               
                 SORTERTE_POENG(I) = W_POREKKE.POENG(J);                        
                 K = J;                                                         
              END;                                                              
        END;                                                                    
        IF K < 1992 THEN                                                        
           IF SORTERTE_POENG(I) > 5.00 THEN                                     
              IF SORTERTE_POENG(I) > 7.00 THEN                                  
                 SORTERTE_POENG_92(I) =                                         
                    + SORTERTE_POENG(I) - 7 + 5 +2/3 + RUNDING;                 
              ELSE                                                              
                 SORTERTE_POENG_92(I) =                                         
                    + 5                                                         
                    + (SORTERTE_POENG(I)-5) * 1/3 + RUNDING;                    
           ELSE                                                                 
              SORTERTE_POENG_92(I) = SORTERTE_POENG(I);                         
        ELSE                                                                    
           SORTERTE_POENG_92(I) = SORTERTE_POENG(I);                            
        IF (K ^= 0 ) THEN                                                       
           W_POREKKE.POENG(K) = 0;                                              
     END; /*DO I=1 ANTALL MULIGE POENGÅR */                                     
     W_POREKKE = POREKKE (BER_EK_IND);                                          
     /* ------------------------------------------------------------- */        
     BEREGNET_BUP = 0;                                                          
                                                                                
     DO I = 1 TO HALVPARTEN;                                                    
        SUM_BUP = SUM_BUP + SORTERTE_POENG_92(I);                               
     END;                                                                       
                                                                                
     BEREGNET_BUP = SUM_BUP/HALVPARTEN+0.005;                                   
                                                                                
     IF BEREGNET_BUP < POENG_SISTE_3ÅR THEN                                     
        BEREGNET_BUP = POENG_SISTE_3ÅR;                                         
     /* ------------------------------------------------------------- */        
     IF W_SKAL_BEREGNES(1) THEN                                                 
        DO;  /* BEREGN ALT 1 - LOF */                                           
           SUM_OPT,                                                             
           SUM_POENGTALL = 0;                                                   
           SUM_POENGÅR =                                                        
              + W_PÅ_FAKTISKE(1)                                                
              + W_PÅ_FRAMTIDIGE(1);                                             
           IF SUM_POENGÅR > 0 THEN                                              
              IF SUM_POENGÅR < 21 THEN                                          
                 DO;  /* 20 ELLER FÆRRE */                                      
                    DO I = 1 TO W_PÅ_FAKTISKE(1);                               
                       SUM_POENGTALL =                                          
                          + SUM_POENGTALL                                       
                          + SORTERTE_POENG(I);                                  
                       IF SORTERTE_POENG(I) > 4 THEN                            
                          SUM_OPT = SUM_OPT + 4;                                
                       ELSE                                                     
                          SUM_OPT = SUM_OPT + SORTERTE_POENG(I);                
                    END;                                                        
                    IF W_PÅ_FRAMTIDIGE(1) > 0 THEN                              
                       DO;  /* HAR FRAMTIDIGE POENGÅR */                        
                          SUM_POENGTALL =                                       
                             + SUM_POENGTALL                                    
                             + BEREGNET_BUP * W_PÅ_FRAMTIDIGE(1);               
                          IF BEREGNET_BUP > 4 THEN                              
                             SUM_OPT =                                          
                                + SUM_OPT                                       
                                + 4 * W_PÅ_FRAMTIDIGE(1);                       
                          ELSE                                                  
                             SUM_OPT =                                          
                                + SUM_OPT                                       
                                + BEREGNET_BUP * W_PÅ_FRAMTIDIGE(1);            
                       END; /* HAR FRAMTIDIGE POENGÅR */                        
                    IF B02.SPESOPPL.OVERKOMP_UTL(BER_EK_IND) = 'J' THEN         
                       W_OPT(1) = SUM_OPT/SUM_POENGÅR + RUNDING;                
                    W_SPT(1) =                                                  
                       + SUM_POENGTALL / SUM_POENGÅR + RUNDING;                 
                 END; /* 20 ELLER FÆRRE */                                      
              ELSE                                                              
                 DO;  /* OVER 20 PÅ */                                          
                    DO I = 1 TO 20;                                             
                       IF (SORTERTE_POENG(I) < BEREGNET_BUP &                   
                           I + W_REDUSERT_ANT_BUP_ÅR(1)>20  ) THEN              
                          DO;                                                   
                             SUM_POENGTALL =                                    
                                + SUM_POENGTALL                                 
                                + BEREGNET_BUP;                                 
                             IF BEREGNET_BUP > 4 THEN                           
                                SUM_OPT = SUM_OPT + 4;                          
                             ELSE                                               
                                SUM_OPT = SUM_OPT + BEREGNET_BUP;               
                          END;                                                  
                       ELSE                                                     
                          DO;                                                   
                             SUM_POENGTALL =                                    
                                + SUM_POENGTALL                                 
                                + SORTERTE_POENG(I);                            
                             IF SORTERTE_POENG(I) > 4 THEN                      
                                SUM_OPT = SUM_OPT + 4;                          
                             ELSE                                               
                                SUM_OPT = SUM_OPT + SORTERTE_POENG(I);          
                          END;                                                  
                    END;                                                        
                    W_SPT(1) =                                                  
                       + SUM_POENGTALL / 20 + RUNDING;                          
                    IF B02.SPESOPPL.OVERKOMP_UTL(BER_EK_IND) = 'J' THEN         
                       W_OPT(1) = SUM_OPT/ 20 + RUNDING;                        
                 END; /* OVER 20 PÅ */                                          
        END; /* BEREGN ALT 1 - LOF */                                           
     /* ------------------------------------------------------------- */        
     IF W_SKAL_BEREGNES(2) THEN                                                 
        DO;  /* BEREGN ALT 2 - EØS PRO RATA 1 */                                
           /* SLUTTPOENGTALL - EØS REGNES AV FAKTISKE POENG */                  
           SUM_POENGÅR = MIN(W_PÅ_FAKTISKE(1),20);                              
           IF SUM_POENGÅR > 0 THEN                                              
              DO;                                                               
                 SUM_OPT,                                                       
                 SUM_POENGTALL = 0;                                             
                 DO I = 1 TO SUM_POENGÅR;                                       
                    SUM_POENGTALL = SUM_POENGTALL + SORTERTE_POENG(I);          
                    IF SORTERTE_POENG(I) > 4 THEN                               
                       SUM_OPT = SUM_OPT + 4;                                   
                    ELSE                                                        
                       SUM_OPT = SUM_OPT + SORTERTE_POENG(I);                   
                 END;                                                           
                 IF B02.SPESOPPL.OVERKOMP_UTL(BER_EK_IND) = 'J' THEN            
                    W_OPT(2) = SUM_OPT/SUM_POENGÅR + RUNDING;                   
                 W_SPT(2) = SUM_POENGTALL/SUM_POENGÅR + RUNDING;                
              END;                                                              
        END;                                                                    
     /* ------------------------------------------------------------- */        
     IF W_SKAL_BEREGNES(4) THEN                                                 
        DO;                                                                     
           /* SLUTTPOENTALL NORDISK - FAKTISKE & FRAMTIDIGE POENG */            
           SUM_OPT,                                                             
           SUM_POENGTALL = 0;                                                   
           SUM_POENGÅR =                                                        
              + W_PÅ_FAKTISKE(1)                                                
              + W_REDUSERT_ANT_BUP_ÅR(4);                                       
           IF SUM_POENGÅR < 21 THEN                                             
              DO;                                                               
                 DO I = 1 TO W_PÅ_FAKTISKE(1);                                  
                    SUM_POENGTALL =                                             
                       + SUM_POENGTALL                                          
                       + SORTERTE_POENG(I);                                     
                    IF SORTERTE_POENG(I) > 4 THEN                               
                       SUM_OPT = SUM_OPT + 4;                                   
                    ELSE                                                        
                       SUM_OPT = SUM_OPT + SORTERTE_POENG(I);                   
                 END;                                                           
                 SUM_POENGTALL =                                                
                    + SUM_POENGTALL                                             
                    + W_REDUSERT_ANT_BUP_ÅR(4) * BEREGNET_BUP;                  
                 SUM_OPT =                                                      
                    + SUM_OPT                                                   
                    + W_REDUSERT_ANT_BUP_ÅR(4) * BEREGNET_BUP;                  
                 IF B02.SPESOPPL.OVERKOMP_UTL(BER_EK_IND) = 'J' THEN            
                    W_OPT(4) = SUM_OPT/SUM_POENGÅR + RUNDING;                   
                 W_SPT(4) =                                                     
                    + SUM_POENGTALL / SUM_POENGÅR + RUNDING;                    
              END;                                                              
           ELSE                                                                 
              DO;                                                               
                 DO I = 1 TO 20;                                                
                    IF (SORTERTE_POENG(I) < BEREGNET_BUP  &                     
                        I + W_REDUSERT_ANT_BUP_ÅR(4) > 20 ) THEN                
                       DO;                                                      
                          SUM_POENGTALL =                                       
                             + SUM_POENGTALL                                    
                             + BEREGNET_BUP;                                    
                          IF (BEREGNET_BUP > 4) THEN                            
                             SUM_OPT = SUM_OPT + 4;                             
                          ELSE                                                  
                             SUM_OPT = SUM_OPT + BEREGNET_BUP;                  
                       END;                                                     
                    ELSE                                                        
                       DO;                                                      
                          SUM_POENGTALL =                                       
                             + SUM_POENGTALL                                    
                             + SORTERTE_POENG(I);                               
                          IF (SORTERTE_POENG(I) > 4) THEN                       
                             SUM_OPT = SUM_OPT + 4;                             
                          ELSE                                                  
                             SUM_OPT = SUM_OPT + SORTERTE_POENG(I);             
                       END;                                                     
                 END;                                                           
                 W_SPT(4) =                                                     
                    + SUM_POENGTALL / 20 + RUNDING;                             
                 IF B02.SPESOPPL.OVERKOMP_UTL(BER_EK_IND) = 'J' THEN            
                    W_OPT(4) = SUM_OPT / 20 + RUNDING;                          
              END;                                                              
        END;                                                                    
     /* --------------------------------------------------------- */            
     /* OPPDATERER TAB MED U54 DERSOM FRAMTIDIGE POENGÅR          */            
     /* --------------------------------------------------------- */            
     DO I = 1 TO W_REDUSERT_ANT_BUP_ÅR(1);                                      
        TAB.POENG_KODE(I+SM_PÅ) = 'U54';                                        
     END;                                                                       
                                                                                
     IF W_FNR_EK_R13.ÅR > 1936           THEN                                   
        W_OPT(*) = 0;                                                           
                                                                                
  END REGN_BUP_SPT;                                                             
 /* ----------------------------------------------------------------- */        
  FINN_BELØP : PROC;                                                            
     DO I = 1 TO 4;                                                             
        IF W_SKAL_BEREGNES(I) THEN                                              
           DO;  /* SKAL BEREGNES */                                             
              IF B02.SPESOPPL.IKKE_GP(BER_EK_IND) ^= 'J' THEN                   
                 DO;  /* BEREGN GRUNNPENSJON & URED. SÆRTILLEGG */              
                                                                                
                    IF (W_TT_ANV_ÅR(I) = 40) THEN                               
                       W_ST(I),                                                 
                       W_ST_TEORETISK(I),                                       
                       W_GP(I),                                                 
                       W_GP_TEORETISK(I) = G;                                   
                    ELSE                                                        
                       W_ST(I),                                                 
                       W_ST_TEORETISK(I),                                       
                       W_GP(I),                                                 
                       W_GP_TEORETISK(I) = G*W_TT_ANV_ÅR(I)/40+0.5;             
                                                                                
                    /* RED. PRORATA PGA ULIK NORSK OG FAKTISK TT?   */          
                    IF (I = 2 ! I = 3                             ) &           
                       (W_TT_FAKTISK_MND(I) ^= W_TT_FAKTISK_MND(1)) THEN        
                       DO;                                                      
                          /* ---------------------------------------- */        
                          /* SJÅ RUNDSKRIV EØS-AVTALENS TRYGDEDEL,    */        
                          /* PUNKT 14.2.2, EKSEMPEL VII.              */        
                          /* ---------------------------------------- */        
                          W_ST(I),                                              
                          W_GP(I) =                                             
                             + W_GP(I)                                          
                             * W_TT_FAKTISK_MND(1)                              
                             / MIN(W_TT_FAKTISK_MND(I),480)                     
                             + 0.5;                                             
                       END;                                                     
                 END; /* BEREGN GRUNNPENSJON */                                 
                                                                                
              IF W_PÅ_FAKTISKE(1) > 0 THEN                                      
                 DO; /* BEREGN TILLEGGSPENSJON */                               
                    IF W_PÅ_ANV(I) > 2 THEN                                     
                       /* ------------------------------------------- */        
                       /* DET ER ET MINSTEVILKÅR AT ANTALL POENGÅR,   */        
                       /* FAKTISKE & FRAMTIDIGE MINST ER 3 ÅR!!!!!!!! */        
                       /* ------------------------------------------- */        
                       W_TP_TEORETISK(I) = F_TP_AARSBEL_M_2_DES                 
                          (W_FNR_EK_R13.ÅR,                                     
                           G,                                                   
                           W_SPT(I),                                            
                           W_OPT(I),                                            
                           W_PÅ_ANV(I),                                         
                           W_PÅ_ETTER_91(I),                                    
                           100,                                                 
                           55);       /* 4187 */                                
                    IF I = 2 !                                                  
                       I = 3 THEN                                               
                       W_TP(I) =                                                
                          + W_TP_TEORETISK(I)                                   
                          * W_PÅ_FAKTISKE(1)                                    
                          / W_PÅ_FAKTISKE(I)                                    
                          + 0.5;                                                
                    ELSE                                                        
                       W_TP(I) = W_TP_TEORETISK(I) + 0.5;                       
                    W_TP_TEORETISK(I) =                                         
                       W_TP_TEORETISK(I) + 0.5;                                 
                    W_TP(I) = W_TP(I) /12 + 0.5;                                
                 END; /* BEREGN TILLEGGSPENSJON */                              
                                                                                
                                                                                
                    /* GP OMREGNES TIL MND. BELØP */                            
                    W_GP(I) = W_GP(I)/12+0.5;                                   
                    W_GP_TEORETISK(I) =                                         
                       W_GP_TEORETISK(I) / 12 + 0.5;                            
                                                                                
                    /* ST OMREGNES TIL MND. BELØP */                            
                    W_ST(I) =                                                   
                       W_ST(I) * ST_PROSENT_ENSLIG / 100 / 12 + 0.5;            
                    W_ST_TEORETISK(I) =                                         
                       W_ST_TEORETISK(I)                                        
                       * ST_PROSENT_ENSLIG / 100 / 12 + 0.5;                    
                    /* PRO RATA ST REDUSERES FOR TP */                          
                    IF W_ST(I) > W_TP(I) THEN                                   
                       W_ST(I) = W_ST(I) - W_TP(I);                             
                    ELSE                                                        
                       W_ST(I) = 0;                                             
                                                                                
                    /* TEORETISK ST REDUSERES FOR TP */                         
                    IF W_ST_TEORETISK(I) > W_TP_TEORETISK(I) THEN               
                       W_ST_TEORETISK(I) =                                      
                          W_ST_TEORETISK(I) - W_TP_TEORETISK(I);                
                    ELSE                                                        
                       W_ST_TEORETISK(I) = 0;                                   
                                                                                
              W_GP_BRUTTO(I) = W_GP(I);                                         
              W_TP_BRUTTO(I) = W_TP(I);                                         
              W_ST_BRUTTO(I) = W_ST(I);                                         
           END; /* SKAL BEREGNES */                                             
     END; /* DO I = 1 TO 4  */                                                  
                                                                                
  END FINN_BELØP;                                                               
 /* ***************************************************************** */        
  FINN_HØGSTE_YTELSE : PROC;                                                    
     IF W_SKAL_BEREGNES(4) THEN                                                 
        W_SKAL_BEREGNES(1) = '0'B;                                              
     DO I = 1 TO 4;                                                             
        W_SUM_PENSJON(I) =                                                      
           W_GP(I) +                                                            
           W_TP(I) +                                                            
           W_ST(I) ;                                                            
     END;                                                                       
     IF B02.BEREGN_FOLKETRYGD(BER_EK_IND) = 'N' THEN                            
        W_SKAL_BEREGNES(1) = '0'B;                                              
     DO I = 1,4,2,3;                                                            
        IF W_SKAL_BEREGNES(I) THEN                                              
           IF ^(HØGSTE = 0) THEN                                                
              IF W_SUM_PENSJON(I) > W_SUM_PENSJON(HØGSTE) THEN                  
                 DO                                                             
                    NEST_HØGSTE = HØGSTE;                                       
                    HØGSTE      = I;                                            
                 END;                                                           
              ELSE                                                              
                 IF ^(NEST_HØGSTE = 0) THEN                                     
                    IF W_SUM_PENSJON(I) > W_SUM_PENSJON(NEST_HØGSTE)            
                       THEN NEST_HØGSTE = I;                                    
                    ELSE;                                                       
                 ELSE                                                           
                    NEST_HØGSTE=I;                                              
           ELSE                                                                 
              HØGSTE=I;                                                         
     END; /* DO I = 1,4,2,3 */                                                  
     IF (W_SKAL_BEREGNES(1) &                                                   
         HØGSTE ^= 1        ) THEN                                              
        NEST_HØGSTE = 1;                                                        
                                                                                
 END FINN_HØGSTE_YTELSE;                                                        
 /* ----------------------------------------------------------------- */        
 FORVENTET_INNTEKT: PROC;                                                       
    DCL                                                                         
       W_BRUTTO_EP   DEC FIXED (7)  INIT (0),                                   
       W_NETTO_EP    DEC FIXED (7)  INIT (0),                                   
       W_ST_FRADRAG  DEC FIXED (5)  INIT (0),                                   
       REST_FRADRAG  DEC FIXED (5)  INIT (0),                                   
       W_GP_FRADRAG  DEC FIXED (5)  INIT (0);                                   
                                                                                
    IF (B02.INNT_PRØVET_EØS_PENS(BER_EK_IND) = 'J' &                            
        W_SKAL_BEREGNES(2)                         ) THEN                       
       DO;  /* INNTEKTSPRØVES ETTER EØS REGLENE */                              
          FRADRAG_F = B02.FORVENTET(BER_SØ_IND) * 100;                          
          FRADRAG_F = FRADRAG_F * MIN(W_TT_FAKTISK_MND(1),480) /                
                                  MIN(W_TT_FAKTISK_MND(2),480) ;                
          FRADRAG_F = FRADRAG_F/100;                                            
          FRADRAG_F = FRADRAG_F*100; /* RUNDES NED TIL HELE 100 */              
          G_HALVE   = G_HALVE * MIN(W_TT_FAKTISK_MND(1),480) /                  
                                MIN(W_TT_FAKTISK_MND(2),480) + 0.99;            
                      /* RUNDES OPP TIL HELE KRONE */                           
          FRADRAG_F = FRADRAG_F - G_HALVE;                                      
       END; /* ETTER EØS-REGLENE */                                             
                                                                                
    FRADRAG_F = FRADRAG_F * 40 / (100 * 12);                                    
                                                                                
    DO I = 1 TO 4;                                                              
       IF W_SKAL_BEREGNES(I) THEN                                               
          DO;  /* PENSJONEN SKAL REDUSERES HER */                               
             W_BRUTTO_EP = W_GP(I) + W_TP(I) + W_ST(I);                         
                   /*     - B02.PENSJON_EØS(BER_SØ_IND)  */                     
             IF FRADRAG_F > W_BRUTTO_EP THEN                                    
                DO;                                                             
                   W_GP(I) = 0;                                                 
                   W_TP(I) = 0;                                                 
                   W_ST(I) = 0;                                                 
                END;                                                            
             ELSE                                                               
                DO;  /* FRADRAGET ER MINDRE ENN GP + TP + ST */                 
                   W_NETTO_EP = W_BRUTTO_EP - FRADRAG_F;                        
                   W_GP(I) = W_GP(I) * W_NETTO_EP / W_BRUTTO_EP;                
                   REST_FRADRAG = FRADRAG_F + W_GP(I) - W_GP_BRUTTO(I);         
                   IF W_ST(I) = 0 THEN                                          
                      W_TP(I) = W_TP(I) - REST_FRADRAG;                         
                   ELSE                                                         
                      DO;                                                       
                         W_TP(I) = W_TP(I)                                      
                                   *  W_NETTO_EP/W_BRUTTO_EP;                   
                         REST_FRADRAG = REST_FRADRAG                            
                                      - (W_TP_BRUTTO(I) - W_TP(I));             
                         W_ST(I) = W_ST(I) - REST_FRADRAG;                      
                      END;                                                      
                 END; /* FRADRAGET ER MINDRE ENN GP + TP + ST */                
          END; /* PENSJONEN SKAL REDUSERES HER */                               
    END; /* DO I = 1 TO 4 */                                                    
                                                                                
 END FORVENTET_INNTEKT;                                                         
 /* ----------------------------------------------------------------- */        
 OPPDATER: PROC;                                                                
    /* -------------------------------------------------------------- */        
    /* OPPDATERER ETTEPENS SEGMENTET TIL GJENLEVENDE                  */        
    /* -------------------------------------------------------------- */        
    /* B02.OMSORG_AVD_BA        IKKE LENGER I BRUK                    */        
    /* B02.VILKÅR_10_5          IKKE LENGER I BRUK                    */        
    /* B02.HJEMMEL_10_8         IKKE LENGER I BRUK                    */        
                                                                                
    B02.ETTEPENS.GP_BRUTTO(BER_SØ_IND) = W_GP_BRUTTO(HØGSTE);                   
    B02.ETTEPENS.GP_NETTO(BER_SØ_IND) = W_GP(HØGSTE);                           
    B02.ETTEPENS.ST(BER_SØ_IND) = W_ST(HØGSTE);                                 
    B02.ETTEPENS.ST_BRUTTO(BER_SØ_IND) = W_ST_BRUTTO(HØGSTE);                   
    /* B02.KT                   IKKE LENGER I BRUK                    */        
    B02.ETTEPENS.TP_BRUTTO(BER_SØ_IND) = W_TP_BRUTTO(HØGSTE);                   
    B02.ETTEPENS.TP_NETTO(BER_SØ_IND) = W_TP(HØGSTE);                           
    B02.ETTEPENS.SPT_AVD(BER_SØ_IND) = W_SPT(HØGSTE);                           
    B02.ETTEPENS.OPT_AVD(BER_SØ_IND) = W_OPT(HØGSTE);                           
    B02.ETTEPENS.PÅ_AVD (BER_SØ_IND) = W_PÅ_ANV(HØGSTE);                        
                                                                                
    /* B02.TP_PROSENT           IKKE LENGER I BRUK                    */        
    /* B02.FOVENTET             IKKE AKTUELL HER                      */        
    /* B02.FRAMLEGGSDATO_ÅMD    IKKE AKTUELL HER                      */        
    /* B02.FRAMLEGGSKODE        IKKE AKTUELL HER                      */        
    /* B02.STI_ÅMD              IKKE AKTUELL HER                      */        
    B02.ETTEPENS.SPT_1291(BER_SØ_IND) = 0;                                      
    B02.ETTEPENS.OPT_1291(BER_SØ_IND) = 0;                                      
    B02.ETTEPENS.PÅ_1291(BER_SØ_IND) = 0;                                       
    B02.ETTEPENS.PÅ_ETTER91 (BER_SØ_IND) = W_PÅ_ETTER_91(HØGSTE);               
                                                                                
    /* -------------------------------------------------------------- */        
    /* OPPDATERER STATUS SEGMENTET TIL GJENLEVENDE                    */        
    /* -------------------------------------------------------------- */        
    B02.SUM_YTELSE(BER_SØ_IND) = W_SUM_PENSJON(HØGSTE);                         
    B02.GARANTI_TP(BER_SØ_IND) = 0;                                             
    B02.GARANTI_DATO_ÅMD(BER_SØ_IND) = 0;                                       
    B02.GT_LOV92(BER_SØ_IND) = 0;                                               
    B02.GT_TILLEGG_LOV92(BER_SØ_IND) = 0;                                       
                                                                                
    /* -------------------------------------------------------------- */        
    /* OPPDATERER STATUS SEGMENTET TIL AVDØDE                         */        
    /* -------------------------------------------------------------- */        
    IF (W_SKAL_BEREGNES(1)) THEN                                                
       DO;                                                                      
          B02.STATUS.TT_FRAMT(BER_EK_IND) = W_TT_FRAMTIDIG_MND(1);              
          B02.STATUS.TT_ANV(BER_EK_IND)   = W_TT_ANV_ÅR(1);                     
       END;                                                                     
    ELSE                                                                        
    IF (W_SKAL_BEREGNES(4) ) THEN                                               
       DO;                                                                      
          B02.STATUS.TT_FRAMT(BER_EK_IND) = W_TT_FRAMTIDIG_MND(4);              
          B02.STATUS.TT_ANV(BER_EK_IND)   = W_TT_ANV_ÅR(4);                     
       END;                                                                     
    ELSE                                                                        
       DO;                                                                      
          B02.STATUS.TT_FRAMT(BER_EK_IND) = 0;                                  
          B02.STATUS.TT_ANV(BER_EK_IND)   = 0;                                  
       END;                                                                     
    IF (HØGSTE=2) THEN                                                          
       DO I = 1 TO W_REDUSERT_ANT_BUP_ÅR(1);                                    
           TAB.POENG_KODE(I+SM_PÅ) = '   ';                                     
        END;                                                                    
                                                                                
    /* -------------------------------------------------------------- */        
    /* OPPDATERER EØS SEGMENTET TIL AVDØDE                            */        
    /* -------------------------------------------------------------- */        
                                                                                
    IF (NEST_HØGSTE ^= 0) THEN                                                  
       DO;  /* HAR ALTERNATIV BEREGNING */                                      
          B02.ALTERNATIV_GP(BER_EK_IND) =                                       
             W_GP(NEST_HØGSTE);                                                 
          B02.ALTERNATIV_ST(BER_EK_IND) =                                       
             W_ST(NEST_HØGSTE);                                                 
          B02.ALTERNATIV_TP(BER_EK_IND) =                                       
             W_TP(NEST_HØGSTE);                                                 
          B02.ALTERNATIV_GP_BRUTTO(BER_EK_IND)=W_GP_BRUTTO(NEST_HØGSTE);        
          B02.ALTERNATIV_TP_BRUTTO(BER_EK_IND)=W_TP_BRUTTO(NEST_HØGSTE);        
          B02.ALTERNATIV_ST_BRUTTO(BER_EK_IND)=W_ST_BRUTTO(NEST_HØGSTE);        
          /*  ALTERNATIV_BT(BER_EK_IND) IKKE KLAR */                            
          /*  ALTERNATIV_ET(BER_EK_IND) IKKE KLAR */                            
       END; /* HAR ALTERNATIV BEREGNING */                                      
    ELSE                                                                        
       DO;  /* HAR IKKE ALTERNATIV BEREGNING */                                 
          B02.ALTERNATIV_GP(BER_EK_IND),                                        
          B02.ALTERNATIV_ST(BER_EK_IND),                                        
          B02.ALTERNATIV_TP(BER_EK_IND),                                        
          B02.ALTERNATIV_GP_BRUTTO(BER_EK_IND),                                 
          B02.ALTERNATIV_TP_BRUTTO(BER_EK_IND),                                 
          B02.ALTERNATIV_ST_BRUTTO(BER_EK_IND) =                                
             0;                                                                 
          /*  ALTERNATIV_BT(BER_EK_IND) IKKE KLAR */                            
          /*  ALTERNATIV_ET(BER_EK_IND) IKKE KLAR */                            
       END; /* HAR IKKE ALTERNATIV BEREGNING */                                 
    B02.ANTALL_NORSKE_PÅ(BER_EK_IND) =                                          
       W_PÅ_ANV(1);                                                             
    B02.ANTALL_NORSKE_PÅ_ETTER91(BER_EK_IND) =                                  
       W_PÅ_ETTER_91(1);                                                        
          B02.SPT_EØS(BER_EK_IND) =                                             
             W_SPT(2);                                                          
          B02.OPT_EØS(BER_EK_IND) =                                             
             W_OPT(2);                                                          
    /* DISSE FELT ER UTFYLT VED REGISTRERING                                    
        PENSJON_EØS(BER_EK_IND)                                                 
        EØS_8_4_3A(BER_EK_IND)                                                  
       DISSE FELT ER UTFYLT VED REIGISTRERING                         */        
    IF (NEST_HØGSTE ^= 0) THEN                                                  
       B02.ALTERNATIV_SUM_PENSJON(BER_EK_IND) =                                 
          W_SUM_PENSJON(NEST_HØGSTE);                                           
    ELSE                                                                        
       B02.ALTERNATIV_SUM_PENSJON(BER_EK_IND) =                                 
          0;                                                                    
                                                                                
    /* DISSE FELT ER UTFYLT VED REGISTRERING                                    
        NORDISK_KONVENSJON(BER_EK_IND)                                          
       DISSE FELT ER UTFYLT VED REIGISTRERING                         */        
                                                                                
    SELECT (HØGSTE);                                                            
       WHEN (1) B02.GUNSTIGSTE_ALTERNATIV(BER_EK_IND) = '1';                    
       WHEN (2)                                                                 
          DO;                                                                   
             B02.GUNSTIGSTE_ALTERNATIV(BER_EK_IND) = '2';                       
             TAB.POENG_KODE(SM_PÅ+1) = '   ';                                   
             POREKKE.POENG(BER_EK_IND,SM_PÅ+1) = 0;                             
          END;                                                                  
       WHEN (3) B02.GUNSTIGSTE_ALTERNATIV(BER_EK_IND) = '3';                    
       WHEN (4)                                                                 
          DO;                                                                   
             B02.GUNSTIGSTE_ALTERNATIV(BER_EK_IND) = '4';                       
             POREKKE.BUP_FPP_ÅR(BER_EK_IND) = W_PÅ_FRAMTIDIGE(1);               
          END;                                                                  
       OTHER;                                                                   
    END;                                                                        
                                                                                
    IF (W_SKAL_BEREGNES(2)) THEN                                                
       DO;  /* OPPDATERES NÅR EØS BEREGNES! */                                  
          B02.TT_EØS_FRAMT_MND(BER_EK_IND) = W_TT_FRAMTIDIG_MND(2);             
          B02.TT_EØS_ANV_ÅR(BER_EK_IND)    = W_TT_ANV_ÅR(2);                    
          B02.TT_EØS_ANV_MND(BER_EK_IND)   = W_TT_ANV_MND(2);                   
          B02.PÅ_EØS(BER_EK_IND)           = W_PÅ_ANV(2);                       
          B02.PÅ_EØS_ETTER91(BER_EK_IND)   = W_PÅ_ETTER_91(2);                  
          B02.PÅ_EØS_FRAMT(BER_EK_IND)     = W_PÅ_FRAMTIDIGE(2);                
          B02.SPT_EØS(BER_EK_IND)          = W_SPT(2);                          
          B02.OPT_EØS(BER_EK_IND)          = W_OPT(2);                          
          B02.PRO_RATA_BEREGNING(BER_EK_IND) = 'J';                             
       END; /* OPPDATERES NÅR EØS BEREGNES! */                                  
    ELSE                                                                        
       DO;  /* NULLSTILLES NÅR EØS IKKE BEREGNES! */                            
          B02.TT_EØS_FRAMT_MND(BER_EK_IND),                                     
          B02.TT_EØS_ANV_ÅR(BER_EK_IND),                                        
          B02.TT_EØS_ANV_MND(BER_EK_IND),                                       
          B02.PÅ_EØS(BER_EK_IND),                                               
          B02.PÅ_EØS_ETTER91(BER_EK_IND),                                       
          B02.PÅ_EØS_FRAMT(BER_EK_IND),                                         
          B02.SPT_EØS(BER_EK_IND),                                              
          B02.OPT_EØS(BER_EK_IND)          = 0;                                 
          B02.PRO_RATA_BEREGNING(BER_EK_IND) = ' ';                             
       END; /* NULLSTILLES NÅR EØS IKKE BEREGNES! */                            
                                                                                
    IF W_SKAL_BEREGNES(4) THEN                                                  
       DO;  /* PENSJONEN ER BEREGNET ETTER NORDISK KONVENSJON */                
                                                                                
          B02.SPT_NORDISK_ART15(BER_EK_IND) = W_SPT(4);                         
          B02.OPT_NORDISK_ART15(BER_EK_IND) = W_OPT(4);                         
          B02.TT_NORDISK_FRAMT_NETTO(BER_EK_IND) =                              
             W_TT_FRAMTIDIG_MND(4);                                             
          B02.TT_NORDISK_FRAMT_BRUTTO(BER_EK_IND) =                             
             W_TT_FRAMTIDIG_MND(1);                                             
          B02.PÅ_NORDISK_FRAMT_BRUTTO(BER_EK_IND) =                             
             W_REDUSERT_ANT_BUP_ÅR(4);                                          
          B02.PÅ_NORDISK_FRAMT_NETTO(BER_EK_IND) =                              
             W_PÅ_FRAMTIDIGE(4);                                                
       END; /* PENSJONEN ER BEREGNET ETTER NORDISK KONVENSJON */                
    ELSE                                                                        
    IF W_SKAL_BEREGNES(1) THEN                                                  
       DO;  /* PENSJONEN ER BEREGNET ETTER NASJONALE REGLER */                  
          B02.SPT_NORDISK_ART15(BER_EK_IND) = W_SPT(1);                         
          B02.OPT_NORDISK_ART15(BER_EK_IND) = W_OPT(1);                         
          B02.TT_NORDISK_FRAMT_NETTO(BER_EK_IND) =                              
             W_TT_FRAMTIDIG_MND(1);                                             
          B02.TT_NORDISK_FRAMT_BRUTTO(BER_EK_IND) =                             
             W_TT_FRAMTIDIG_MND(1);                                             
          B02.PÅ_NORDISK_FRAMT_BRUTTO(BER_EK_IND),                              
          B02.PÅ_NORDISK_FRAMT_NETTO(BER_EK_IND) =                              
             W_PÅ_FRAMTIDIGE(1);                                                
       END; /* PENSJONEN ER BEREGNET ETTER NASJONALE REGLER */                  
    ELSE                                                                        
       DO;  /* FYLLER IKKJE NASJONALE REGLER - NULLSTILLING */                  
          B02.SPT_NORDISK_ART15(BER_EK_IND),                                    
          B02.OPT_NORDISK_ART15(BER_EK_IND),                                    
          B02.TT_NORDISK_FRAMT_NETTO(BER_EK_IND),                               
          B02.TT_NORDISK_FRAMT_BRUTTO(BER_EK_IND),                              
          B02.PÅ_NORDISK_FRAMT_BRUTTO(BER_EK_IND),                              
          B02.PÅ_NORDISK_FRAMT_NETTO(BER_EK_IND) = 0;                           
       END; /* FYLLER IKKJE NASJONALE REGLER - NULLSTILLING */                  
    B02.TT_FAKTISK_NORSK_MND(BER_EK_IND) = W_TT_FAKTISK_MND(1);                 
    IF W_SKAL_BEREGNES(2) THEN                                                  
       B02.PÅ_EØS_FAKTISK(BER_EK_IND) = W_PÅ_FAKTISKE(2);                       
    /* -------------------------------------------------------------- */        
    /* OPPDATERER I DIV_PARAM_OMR                                     */        
    /* -------------------------------------------------------------- */        
    IF (W_SKAL_BEREGNES(2)) THEN                                                
       DIV_PARAM_OMR.REGN_PRO_RATA(BER_EK_IND) = 'J';                           
    DIV_PARAM_OMR.PÅ_NORSK_FAKTISK(BER_EK_IND) =                                
       W_PÅ_FAKTISKE(1);                                                        
    DIV_PARAM_OMR.PÅ_EØS_FAKTISK(BER_EK_IND) =                                  
       W_PÅ_FAKTISKE(2) - W_PÅ_FAKTISKE(1);                                     
    DIV_PARAM_OMR.PÅ_TEORETISK_FRAMT =                                          
       W_REDUSERT_ANT_BUP_ÅR(4);                                                
    /* DENNE UTGÅR - VI BRUKER B02, 130400 MARTIN                               
    DIV_PARAM_OMR.TT_NORSK_FAKTISK = W_TT_FAKTISK_MND(1) */                     
    DIV_PARAM_OMR.TT_TEORETISK     = W_TT_ANV_ÅR(2);                            
    /* ENDRET MND TIL ÅR MARTIN 0199 */                                         
    DIV_PARAM_OMR.TT_SUM_FAKTISK   = W_TT_TEORETISK_MND(2);                     
    DIV_PARAM_OMR.FULLT_SÆRTILLEGG(BER_SØ_IND) = W_ST_BRUTTO(HØGSTE);           
 END OPPDATER;                                                                  
 /* ----------------------------------------------------------------- */        
   %INCLUDE R0014187;     /* F_TP_AARSBEL_M_2_DES                     */        
   %INCLUDE R0014471;     /* FINN_TT_FAKTISK                          */        
   %INCLUDE R0014472;     /* NULLSTILL_P0019985                       */        
   %INCLUDE R0014573;     /* FYLLER_VILKÅR_3_17_NASJONAL              */        
   %INCLUDE R0014574;     /* FYLLER_VILKÅR_3_17_EØS                   */        
 /*%INCLUDE R0019905;     /* F_ALDER                                  */        
 /*%INCLUDE R0019912;     /* KONV. CHAR -> PIC ! PIC -> CHAR          */        
   %INCLUDE R0019995;     /* KONV_FNR11_FNR13                         */        
 /* ----------------------------------------------------------------- */        
 L999 :                                                                         
  END UEXEØS;                                                                   
