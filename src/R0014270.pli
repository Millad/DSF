 /*   SIST ENDRET PÅ PROD   2008.05.31 11.23.52 AV   SPA2990          */        
 /*   SIST ENDRET PÅ PROD   2006.09.05  8.43.50 AV   JDA2990          */        
 /*   SIST ENDRET PÅ TEST   2006.08.24  9.53.33 AV   SPA2990          */        
 /*   SIST ENDRET PÅ PROD   2005.06.24 12.52.53 AV   JDA2970          */        
 /*   SIST ENDRET PÅ TEST   2005.04.26 12.55.12 AV   JDA2970          */        
 /*   SIST ENDRET PÅ QASS   2004.08.06 13.28.30 AV   JDA2970          */        
 /*   SIST ENDRET PÅ TEST   2004.07.13 13.32.38 AV   JDA2970          */        
 /*   SIST ENDRET PÅ QASS   2003.03.14 10.50.05 AV   JDA2970          */        
 /*   SIST ENDRET PÅ TEST   2003.03.14 10.39.48 AV   JDA2970          */        
 /*   SIST ENDRET PÅ PROD   2002.09.12  9.07.23 AV   JDA2970          */        
 /*   SIST ENDRET PÅ PROD   2001.01.31 11.59.44 AV   HLA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.12.18  8.55.58 AV   HLA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.12.06  8.50.15 AV   HLA7339          */        
 /*   SIST ENDRET PÅ PROD   2000.07.07 13.07.46 AV   JDA7339          */        
 /* ***************************************************************** */        
 /* IDENTIFIKASJON                                                    */        
 /*     R0014270 - AP - EØS-REGLER      - HOVEDPROG                   */        
 /*     PROGRAMMERER: HERMAN LARSSEN JUNI 99.                         */        
 /* HENSIKT                                                           */        
 /*     BEREGNE ALDERSPENSJON MED EØS-FORDELER                        */        
 /*     OPPDATERER EØS     MED : PRO_RATA_BEREGNING, BEREGN_FOLKETRYGD*/        
 /* PROGRAMTILKNYTNING.                                               */        
 /*     PROSEDYREN BLIR LINKET FRA  R0014001                          */        
 /* ***************************************************************** */        
 APXEØS :                                                                       
    PROC (COMMAREA_PEKER) OPTIONS(MAIN);                                        
 DCL   COMMAREA_PEKER PTR;                                                      
 /* ----------------------------------------------------------------- */        
 /* HENTER INN FORHÅNDSDEKLARERTE "BASER"                             */        
 /* -----------------------                                           */        
 %INCLUDE P0019906;      /* DEKLARERER TRANS_OPPL_OMR                 */        
 %INCLUDE P0019908;      /* DEKLARERER KOM_OMR                        */        
 %INCLUDE P0019910;      /* DEKLARERER STYRINGS_OMR                   */        
 %INCLUDE P0019912;      /* DEKLARERER DIV_PARAM_OMR                  */        
 %INCLUDE P0019924;      /* GV_TAB_RE      BASED(GV_PEKER)            */        
 %INCLUDE P0019925;  /* GRUNNBELØP OG SÆRTILLEGG-TABELL  */                     
 %INCLUDE P0014002;      /* W_POREKKE                                 */        
 %INCLUDE P0014003;      /* TAB                                       */        
 %INCLUDE P0014009;      /* POREKKE                                   */        
 /* ----------------------------------------------------------------- */        
 /* BRUKER TIDL. DEKLARASJONER FOR Å OPPRETTE EGNE BASER              */        
 /* ----------------------------------------------------------------- */        
 DCL 1 B01 BASED (B01_PEKER),                                                   
     %INCLUDE P0019921;                                                         
 DCL 1 B02 BASED (B02_PEKER),                                                   
     %INCLUDE P0019921;                                                         
 DCL 1 WSPESOPPL,                                                               
     %INCLUDE P0019939;                                                         
 DCL 1 WEØSINFO,                                                                
     %INCLUDE P0019966;                                                         
 /* ----------------------------------------------------------------- */        
 /* DEKLARERER EGNE VARIABLER FOR DENNE PROSEDYREN                    */        
 /* ----------------------------------------------------------------- */        
 DCL (ADDR, VERIFY, MAX) BUILTIN;                                               
 DCL ALDER_EK                       FIXED DEC (5)   INIT (0),                   
     ANTALL_BUP_ÅR                  FIXED DEC (5)   INIT (0),                   
     FM_PÅ                          FIXED BIN (15)  INIT (0),                   
     FRADRAG                        FIXED DEC (3)   INIT (0),                   
     GP_EØS                         FIXED DEC (7)   INIT (0),                   
 /*  GP_FAKTOR                      FIXED DEC (3,2) INIT (1),  */               
     GP_FAKTOR                      FIXED DEC (5,3) INIT (1),/*2004*/           
     GP_NORSK                       FIXED DEC (7)   INIT (0),                   
     GP_NORSK_NÅ                    FIXED DEC (7)   INIT (0),                   
     G_NÅ                           FIXED DEC (5)   INIT (0),                   
     PÅ_FAKTISK_EØS                 FIXED BIN (15)  INIT (0),                   
     PÅ_FAKTISK_NORSK               FIXED BIN (15)  INIT (0),                   
     PÅ_FAKTISK_SUM                 FIXED BIN (15)  INIT (0),                   
     SISTE                          FIXED DEC (3)   INIT (0),                   
     SLUTT_ÅR                       FIXED DEC (5)   INIT (0),                   
     SM_PÅ                          FIXED BIN (15)  INIT (0),                   
     START_ÅR                       FIXED DEC (5)   INIT (0),                   
     STOPP_ÅR                       FIXED DEC (5)   INIT (0),                   
     ST_EØS                         FIXED DEC (7)   INIT (0),                   
     ST_NORSK                       FIXED DEC (7)   INIT (0),                   
     ST_NORSK_NÅ                    FIXED DEC (7)   INIT (0),                   
     SUM_YTELSE_EØS                 FIXED DEC (7)   INIT (0),                   
     SUM_YTELSE_NORSK               FIXED DEC (7)   INIT (0),                   
     SUM_YTELSE_NÅ                  FIXED DEC (7)   INIT (0),                   
     TP_EØS                         FIXED DEC (7)   INIT (0),                   
     TP_2_DES                       FIXED DEC (9,2)   INIT (0),                 
     TT_FAKTISK_SUM                 FIXED DEC (3 )  INIT (0),                   
     TP_NORSK                       FIXED DEC (7)   INIT (0),                   
     TP_NORSK_NÅ                    FIXED DEC (7)   INIT (0),                   
     W_ETTER91                      FIXED DEC (3)   INIT (0),                   
     W_FNR                          PIC   '(11)9'   INIT (0),                   
     W_FNR13                        PIC   '(13)9'   INIT (0),                   
     1 W_FNR13_R  DEF W_FNR13,                                                  
       2 DAG                        PIC   '(2)9',                               
       2 MND                        PIC   '(2)9',                               
       2 ÅR                         PIC   '(4)9',                               
       2 FILLER                     PIC   '(5)9',                               
     W_PI                           FIXED DEC (9)   INIT (0),                   
     W_PROSENT                      FIXED DEC (4,2) INIT (0),                   
     W_SUM_YTELSE                   FIXED DEC (7)   INIT (0),                   
     W_GP_NETTO                     FIXED DEC (7)   INIT (0),                   
     W_TP_NETTO                     FIXED DEC (7)   INIT (0),                   
     W_ST                           FIXED DEC (7)   INIT (0),                   
     W_GP_SPAR                      FIXED DEC (7)   INIT(0),                    
     W_ST_SPAR                      FIXED DEC (7)   INIT(0),                    
     W_TP_SPAR                      FIXED DEC (7)   INIT(0);                    
 /* ================================================================ */         
 /*  HER STARTER HOVEDPROGRAMMET                                     */         
 /* ================================================================ */         
   COMMAREA_PEKER           = ADDR(KOM_OMR);                                    
   KOM_OMR.DIV_PARAM_PEKER  = ADDR(KOM_OMR.DIV_PARAM_OMR);                      
   IF FEIL_MELD_NR = 0  THEN                                                    
   PROGRAM_ID='R0014270';                                                       
                                                                                
   W_FNR                   = B02.FNR(BER_SØ_IND);                               
   W_FNR13                 = KONV_FNR11_FNR13(W_FNR);                           
                                                                                
 /*FORUTSETNINGER:*/                                                            
                                                                                
  IF B02.TT_EØS_ANV_ÅR(BER_SØ_IND) = 0   THEN                                   
     B02.TT_EØS_ANV_ÅR(BER_SØ_IND) = B02.TT_ANV(BER_SØ_IND);                    
 /*  GOTO SLUTT;      200101 FJERNET 200109*/                                   
 /*AJOURFØRE POENGREKKE :*/                                                     
                                                                                
  W_POREKKE = POREKKE(BER_SØ_IND);                                              
                                                                                
  /* REMEDY 370 - FEIL POENG ART 15, FRA HER                                    
  IF (B02.NORDISK_KONVENSJON(BER_SØ_IND) = 'J' &                                
      B02.PÅ_NORDISK_FRAMT_BRUTTO(BER_SØ_IND)  >                                
      B02.PÅ_NORDISK_FRAMT_NETTO(BER_SØ_IND)   ) THEN                           
     DO;*//* REMEDY 370 - FEIL POENG ART 15                                     
        REDUKSJON_ART15_ANT_ÅR =                                                
           + B02.PÅ_NORDISK_FRAMT_BRUTTO(BER_SØ_IND)                            
           - B02.PÅ_NORDISK_FRAMT_NETTO(BER_SØ_IND);                            
        POREKKE.PÅ(BER_SØ_IND) =                                                
           + POREKKE.PÅ(BER_SØ_IND)                                             
           - REDUKSJON_ART15_ANT_ÅR;                                            
        IF POREKKE.PÅ_ETTER91(BER_SØ_IND) > REDUKSJON_ART15_ANT_ÅR THEN         
           POREKKE.PÅ_ETTER91(BER_SØ_IND) =                                     
              POREKKE.PÅ_ETTER91(BER_SØ_IND) - REDUKSJON_ART15_ANT_ÅR;          
        ELSE                                                                    
           POREKKE.PÅ_ETTER91(BER_SØ_IND) = 0;                                  
     END;    REMEDY 370 - FEIL POENG ART 15 */                                  
  B02.ANTALL_NORSKE_PÅ(BER_SØ_IND) = W_POREKKE.PÅ;                              
  B02.ANTALL_NORSKE_PÅ_ETTER91(BER_SØ_IND) = W_POREKKE.PÅ_ETTER91;              
 /*TELL FAKTISKE POENGÅR*/                                                      
     START_ÅR = B02.UFØRHIST.UFT_ÅMD(BER_SØ_IND,1) /10000;                      
     SLUTT_ÅR = W_FNR13_R.ÅR + 66;                                              
     FM_PÅ = MAX(W_FNR13_R.ÅR + 17, 1967);                                      
     SM_PÅ = START_ÅR - 1;                                                      
     DO I = FM_PÅ TO SM_PÅ;                                                     
        IF (POREKKE.POENG(BER_SØ_IND,I) > 0     ) &                             
           ^(POREKKE.KODE(BER_SØ_IND,I) = 'U55' !                               
             POREKKE.KODE(BER_SØ_IND,I) = 'U56' ) THEN                          
           DO;                                                                  
              PÅ_FAKTISK_NORSK = PÅ_FAKTISK_NORSK + 1;                          
              IF I > 1991                THEN                                   
                 W_ETTER91 = W_ETTER91 + 1;                                     
           END;                                                                 
        ELSE                                                                    
           DO; /* IKKE GODSKREVET PENSJONSPOENG I NORGE, EØS-ÅR? */             
              IF B02.INNTEKTSÅR_EØS(BER_SØ_IND,I) THEN                          
                 DO;                                                            
                    PÅ_FAKTISK_EØS = PÅ_FAKTISK_EØS + 1;                        
                    IF I > 1991            THEN                                 
                       W_ETTER91 = W_ETTER91 + 1;                               
                 END;                                                           
           END;/* IKKE GODSKREVET PENSJONSPOENG I NORGE, EØS-ÅR? */             
     END; /* TELL OPP FAKTISKE POENGÅR I NORGE/EØS OMRÅDET */                   
                                                                                
     DIV_PARAM_OMR.PÅ_EØS_FAKTISK(BER_SØ_IND) = PÅ_FAKTISK_EØS;                 
     B02.PÅ_EØS_FAKTISK(BER_SØ_IND)           = PÅ_FAKTISK_EØS;                 
     PÅ_FAKTISK_SUM = PÅ_FAKTISK_NORSK + PÅ_FAKTISK_EØS;                        
     IF PÅ_FAKTISK_SUM > 40    THEN                                             
        PÅ_FAKTISK_SUM = 40;                                                    
                                                                                
 /*IF ^F_FIX3_GYLDIG(B02.BUP_GRAD_EØS(BER_SØ_IND)) THEN                         
      B02.BUP_GRAD_EØS(BER_SØ_IND) = 0;                                         
           ********************* */                                             
  IF B02.BUP_GRAD_EØS(BER_SØ_IND) > 0     THEN                                  
     DO;                                                                        
        DO I = START_ÅR TO SLUTT_ÅR;                                            
           W_POREKKE.POENG   (I) = 0;                                           
           W_POREKKE.BUP_FPP (I) = 0;                                           
        END;                                                                    
                                                                                
 /*PÅ_EØS ER ANTALL POENGÅR VED BEREGNING AV UFØREPENSJON - */                  
 /*EØS-ALTERNATIVET SKAL IKKE HA FLERE ÅR                  */                   
                                                                                
      /*OBS:  KAN TJENE ÅR FRA 67 TIL 69  OBS */                                
                                                                                
        IF B02.PÅ_EØS(BER_SØ_IND) > PÅ_FAKTISK_SUM       THEN                   
           DO;                                                                  
              STOPP_ÅR = START_ÅR + B02.PÅ_EØS(BER_SØ_IND)                      
                         - PÅ_FAKTISK_SUM - 1;                                  
              DO I = START_ÅR TO STOPP_ÅR;                                      
                 W_POREKKE.POENG   (I) = B02.BUP_GRAD_EØS(BER_SØ_IND);          
                 W_POREKKE.BUP_FPP (I) = B02.BUP_GRAD_EØS(BER_SØ_IND);          
                 IF I > 1991             THEN                                   
                    W_ETTER91 = W_ETTER91 + 1;                                  
              END;                                                              
           END;                                                                 
        CALL BEREGN_SPT_OPT_PÅ(BER_SØ_IND,W_POREKKE,W_FNR13);                   
     END;                                                                       
     W_POREKKE.PÅ = W_POREKKE.PÅ + PÅ_FAKTISK_EØS;                              
                                                                                
  /*NÅR UFØREGRADEN VAR 100 OG                            */                    
  /*DET IKKE HAR VÆRT MER ENN EN UFØREPERIODE, SÅ SKAL    */                    
  /*POENGTALLENE FRA UFØREPERIODEN BRUKES :               */                    
                                                                                
     IF B02.UFØRHIST.UFG(BER_SØ_IND,1)            = 100 &                       
        B02.UFØRGRAD.UFG_DATO_ÅMD(BER_SØ_IND,1,1) = 0   THEN                    
 /*OBS - SKULLE DET HELLER VÆRE SLIK :                                          
        B02.UFØRHIST.UFG(BER_SØ_IND,2) = 0   THEN                               
 ******************************************************* */                     
        DO;                                                                     
           W_POREKKE.SPT = B02.SPT_EØS(BER_SØ_IND);                             
           W_POREKKE.OPT = B02.OPT_EØS(BER_SØ_IND);                             
        END;                                                                    
                                                                                
     IF (W_FNR13_R.ÅR  > 1925  )       &                                        
        ((B02.KONV_P_KODE(BER_SØ_IND)    = 'K'   &                              
          B02.UTTAKSDATO_ÅMD(BER_SØ_IND) < 19920000 )    !                      
                                                                                
        ((B02.KONV_P_KODE(BER_SØ_IND)    = 'U'   !                              
          B02.KONV_P_KODE(BER_SØ_IND)    = 'Y' ) &                              
          B02.UFØRHIST.UFT_ÅMD(BER_SØ_IND,1) < 19920000))  THEN                 
        DO;                                                                     
           FRADRAG = W_FNR13_R.ÅR - 1925;                                       
           IF FRADRAG > POREKKE.PÅ_ETTER91(BER_SØ_IND)    THEN                  
              B02.ALDERSP.PÅ_ETTER91(BER_SØ_IND)  = 0;                          
           ELSE                                                                 
              B02.ALDERSP.PÅ_ETTER91(BER_SØ_IND)  =                             
              POREKKE.PÅ_ETTER91(BER_SØ_IND) - FRADRAG;                         
           IF FRADRAG > W_ETTER91                THEN                           
              W_ETTER91 = 0;                                                    
           ELSE                                                                 
              W_ETTER91 = W_ETTER91 - FRADRAG;                                  
        END;                                                                    
     IF B02.ALDERSP.PÅ_ETTER91(BER_SØ_IND) = 0   THEN                           
        DO;                                                                     
           POREKKE.PÅ_ETTER91(BER_SØ_IND)     = 0;                              
           POREKKE_P67.PÅ_ETTER91(BER_SØ_IND) = 0;                              
        END;                                                                    
     W_POREKKE.PÅ_ETTER91 = W_ETTER91;                                          
                                                                                
                                                                                
 /*BEREGNING :*/                                                                
                                                                                
  IF W_POREKKE.PÅ > 2         THEN                                              
     B02.KONVENSJON_TP = 'J';                                                   
                                                                                
  TP_NORSK = F_TP92(W_FNR13_R.ÅR,G,POREKKE.SPT(BER_SØ_IND),                     
                                   POREKKE.OPT(BER_SØ_IND),                     
                                   POREKKE.PÅ (BER_SØ_IND),                     
                      POREKKE.PÅ_ETTER91 (BER_SØ_IND),                          
                                   100,100,'J');                                
                                                                                
  IF PÅ_FAKTISK_NORSK > 0     THEN                                              
    DO;                                                                         
       TP_2_DES = F_TP_AARSBEL_M_2_DES                                          
                   (W_FNR13_R.ÅR,G,W_POREKKE.SPT,                               
                                   W_POREKKE.OPT,                               
                                   W_POREKKE.PÅ ,                               
                                   W_POREKKE.PÅ_ETTER91,                        
                                   100,100);                                    
                                                                                
   /*REMEDY 970 : HERMAN 200504 : */                                            
                                                                                
       TP_2_DES =                                                               
 /*    ((TP_EØS * PÅ_FAKTISK_NORSK)/(PÅ_FAKTISK_SUM *12)) + 0.5; */             
       TP_2_DES * PÅ_FAKTISK_NORSK;                                             
       TP_EØS = TP_2_DES /(PÅ_FAKTISK_SUM *12) + 0.5;                           
    END;                                                                        
                                                                                
 /*GRUNNPENSJON OG SÆRTILLEGG*/                                                 
                                                                                
  IF B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND) = 0    THEN                           
     B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND) =                                     
         B02.TT_FØR_1967(BER_SØ_IND) * 12  +                                    
         B02.TT_ETTER_1966(BER_SØ_IND);                                         
                                                                                
                                                                                
  TT_FAKTISK_SUM = B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND) +                       
                   B02.TT_PRO_RATA_MND(BER_SØ_IND);                             
  IF TT_FAKTISK_SUM > 480        THEN                                           
     TT_FAKTISK_SUM = 480;                                                      
                                                                                
  SELECT (B02.PENSJONSTYPE2(BER_SØ_IND));                                       
     WHEN ('F')                                                                 
        DO;                                                                     
           ALDER_EK = F_ALDER((B02.FNR(BER_EK_IND)),                            
                            (B02.VIRK_DATO_ÅMD(BER_SØ_IND)));                   
           IF ALDER_EK > 6000         THEN                                      
              W_PROSENT = ST_PROSENT_ENSLIG * 2; /*200010*/                     
           ELSE                                                                 
              W_PROSENT = ST_PROSENT_ENSLIG;                                    
        END;                                                                    
     WHEN ('S')                                                                 
        DO;                                                                     
           W_PROSENT = ST_PROSENT_SAMST;                                        
        END;                                                                    
     OTHERWISE                                                                  
        DO;                                                                     
           W_PROSENT = ST_PROSENT_ENSLIG;                                       
        END;                                                                    
  END; /* SELECT PENSJONSTYPE2(BER_SØ_IND) */                                   
                                                                                
  ST_NORSK = G * B02.TT_ANV(BER_SØ_IND)* W_PROSENT                              
                                   / (40 * 12 * 100)  + 0.5;                    
     /* FOR Å UNNGÅ ZERODIVIDE */                                               
     IF (TT_FAKTISK_SUM > 0) THEN                                               
        ST_EØS   = G * B02.TT_EØS_ANV_ÅR(BER_SØ_IND)                            
                     * B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND)                     
                               *  W_PROSENT                                     
                     /(40 * 12 * TT_FAKTISK_SUM * 100) + 0.5;                   
     ELSE                                                                       
        ST_EØS   = 0;                                                           
                                                                                
  IF B02.PENSJONSTYPE2(BER_SØ_IND) = 'S'    !                                   
     DIV_PARAM_OMR.REDUSERT_GP_2G(BER_SØ_IND)  ^= ' '    THEN                   
     GP_FAKTOR = GP_PROSENT;                                                    
                                                                                
     GP_NORSK = G * B02.TT_ANV(BER_SØ_IND) * GP_FAKTOR                          
                          / (40 * 12) + 0.5;                                    
                                                                                
     /* FOR Å UNNGÅ ZERODIVIDE */                                               
     IF (B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND) > 0) THEN                         
        GP_EØS   = G * B02.TT_EØS_ANV_ÅR(BER_SØ_IND)                            
           * B02.TT_FAKTISK_NORSK_MND(BER_SØ_IND) * GP_FAKTOR                   
                     / (40 * 12 * TT_FAKTISK_SUM)  + 0.5;                       
     ELSE                                                                       
        GP_EØS = 0;                                                             
                                                                                
  IF ST_NORSK > TP_NORSK          THEN                                          
     ST_NORSK = ST_NORSK - TP_NORSK;                                            
  ELSE                                                                          
     ST_NORSK = 0;                                                              
  IF ST_EØS   > TP_EØS            THEN                                          
     ST_EØS   = ST_EØS   - TP_EØS;                                              
  ELSE                                                                          
     ST_EØS = 0;                                                                
                                                                                
 /*SAMMENLIGNE OG OPPDATERE*/                                                   
                                                                                
  SUM_YTELSE_NORSK = GP_NORSK + TP_NORSK + ST_NORSK;                            
  SUM_YTELSE_EØS   = GP_EØS  + TP_EØS   + ST_EØS;                               
                                                                                
  B02.EØSINFO.SPT_EØS(BER_SØ_IND) = W_POREKKE.SPT;                              
  B02.EØSINFO.OPT_EØS(BER_SØ_IND) = W_POREKKE.OPT;                              
  B02.EØSINFO.PÅ_EØS (BER_SØ_IND) = W_POREKKE.PÅ;                               
  B02.EØSINFO.PÅ_EØS_ETTER91 (BER_SØ_IND) = W_POREKKE.PÅ_ETTER91;               
  B02.EØSINFO.PÅ_NORDISK_FAKT(BER_SØ_IND) = PÅ_FAKTISK_NORSK;                   
                                                                                
  IF SUM_YTELSE_NORSK = 0 THEN                                                  
     B02.BEREGN_FOLKETRYGD(BER_SØ_IND) = 'N';                                   
 /* ***************                                                             
  ELSE                                                                          
     B02.BEREGN_FOLKETRYGD(BER_SØ_IND) = 'J';                                   
  ********************************* */                                          
                                                                                
  IF SUM_YTELSE_NORSK < SUM_YTELSE_EØS      THEN                                
     DO;                                                                        
        POREKKE(BER_SØ_IND)                    = W_POREKKE;                     
        B02.PRO_RATA_BEREGNING(BER_SØ_IND)     = 'A';                           
        B02.ALDERSP.SPT(BER_SØ_IND)            = W_POREKKE.SPT;                 
        B02.ALDERSP.OPT(BER_SØ_IND)            = W_POREKKE.OPT;                 
        B02.ALDERSP.PÅ (BER_SØ_IND)            = W_POREKKE.PÅ;                  
        B02.VT_SPT(BER_SØ_IND)                 = W_POREKKE.SPT;                 
        B02.VT_OPT(BER_SØ_IND)                 = W_POREKKE.OPT;                 
        B02.VT_PÅ (BER_SØ_IND)                 = W_POREKKE.PÅ;                  
        B02.ALDERSP.PÅ_ETTER91(BER_SØ_IND)     = W_POREKKE.PÅ_ETTER91;          
        B02.ALDERSP.GP(BER_SØ_IND)             = GP_EØS;                        
        B02.AP_GP_NETTO(BER_SØ_IND)            = GP_EØS;                        
        B02.ALDERSP.TP(BER_SØ_IND)             = TP_EØS;                        
        IF TP_EØS = 0                     THEN                                  
           DO;                                                                  
              B02.ALDERSP.SPT(BER_SØ_IND) = 0;                                  
              B02.ALDERSP.OPT(BER_SØ_IND) = 0;                                  
           END;                                                                 
        B02.AP_TP_NETTO(BER_SØ_IND)            = TP_EØS;                        
        B02.ALDERSP.ST(BER_SØ_IND)             = ST_EØS;                        
        B02.AP_ST_NETTO(BER_SØ_IND)            = ST_EØS;                        
        B02.SUM_YTELSE(BER_SØ_IND)             = SUM_YTELSE_EØS;                
        B02.ALTERNATIV_GP(BER_SØ_IND)          = GP_NORSK;                      
        B02.ALTERNATIV_GP_BRUTTO(BER_SØ_IND)   = GP_NORSK;                      
        B02.ALTERNATIV_TP       (BER_SØ_IND)   = TP_NORSK;                      
        B02.ALTERNATIV_TP_BRUTTO(BER_SØ_IND)   = TP_NORSK;                      
        B02.ALTERNATIV_ST       (BER_SØ_IND)   = ST_NORSK;                      
        B02.ALTERNATIV_ST_BRUTTO(BER_SØ_IND)   = ST_NORSK;                      
        B02.ALTERNATIV_SUM_PENSJON(BER_SØ_IND) = GP_NORSK                       
                          + TP_NORSK + ST_NORSK;                                
        DO I = 1963 TO 2010;                                                    
           TAB.GV(I) = GV_TAB_ARRAY.G_V(I);                                     
        END;                                                                    
        DO I = START_ÅR TO SLUTT_ÅR;                                            
           POREKKE.KODE(BER_SØ_IND,I) = '   ' ;                                 
           W_PI = B02.PI(BER_SØ_IND,I);        /*200504 */                      
           POREKKE.POENG(BER_SØ_IND,I) =                                        
             F_INNTEKT_POENG(W_PI,I,GV(I),0);                                   
        END;                                                                    
     END;                                                                       
  ELSE                                                                          
     DO;                                                                        
        B02.ALDERSP.GP(BER_SØ_IND)    = GP_NORSK;                               
        B02.AP_GP_NETTO(BER_SØ_IND)   = GP_NORSK;                               
        B02.ALDERSP.TP(BER_SØ_IND)    = TP_NORSK;                               
        IF TP_NORSK = 0             THEN                                        
           DO;                                                                  
              B02.ALDERSP.SPT(BER_SØ_IND) = 0;                                  
              B02.ALDERSP.OPT(BER_SØ_IND) = 0;                                  
           END;                                                                 
        B02.AP_TP_NETTO(BER_SØ_IND)   = TP_NORSK;                               
        B02.ALDERSP.ST(BER_SØ_IND)    = ST_NORSK;                               
        B02.AP_ST_NETTO(BER_SØ_IND)   = ST_NORSK;                               
        B02.SUM_YTELSE(BER_SØ_IND)    = SUM_YTELSE_NORSK;                       
        B02.ALTERNATIV_GP(BER_SØ_IND) = GP_EØS;                                 
        B02.ALTERNATIV_GP_BRUTTO(BER_SØ_IND) = GP_EØS;                          
        B02.ALTERNATIV_TP(BER_SØ_IND) = TP_EØS;                                 
        B02.ALTERNATIV_TP_BRUTTO(BER_SØ_IND) = TP_EØS;                          
        B02.ALTERNATIV_ST(BER_SØ_IND) = ST_EØS;                                 
        B02.ALTERNATIV_ST_BRUTTO(BER_SØ_IND) = ST_EØS;                          
        B02.ALTERNATIV_SUM_PENSJON(BER_SØ_IND) = GP_EØS                         
                          + TP_EØS + ST_EØS;                                    
                                                                                
  /*TEST PÅ OM DET VAR EN AP BLANKETT FØRST : */                                
                                                                                
        IF TRANSTYPE         = 1                            THEN                
           DO;                                                                  
              IF B01.PRO_RATA_BEREGNING(BER_SØ_IND) = 'A' !                     
                 B01.PRO_RATA_BEREGNING(BER_SØ_IND) = 'J'   THEN                
                 B02.PRO_RATA_BEREGNING(BER_SØ_IND) = 'C';                      
              ELSE                                                              
              IF B01.PRO_RATA_BEREGNING(BER_SØ_IND) = 'B'   THEN                
              DO;                                                               
     /*FINN DAGENS GRUNNBELØP */                                                
                 DO J = 40 TO 65 UNTIL(PERIODE_START_ÅMD(J) >=                  
                          B01.G_DATO_ÅMD(BER_SØ_IND));                          
                 END;                                                           
                 G_NÅ = G_TAB_PERIODE.GRUNNBELØP(J);                            
                                                                                
                 TP_NORSK_NÅ = F_TP92(W_FNR13_R.ÅR,G_NÅ,                        
                                   POREKKE.SPT(BER_SØ_IND),                     
                                   POREKKE.OPT(BER_SØ_IND),                     
                                   POREKKE.PÅ (BER_SØ_IND),                     
                      POREKKE.PÅ_ETTER91 (BER_SØ_IND),                          
                                   100,100,'J');                                
                                                                                
                 GP_NORSK_NÅ = G_NÅ * B02.TT_ANV(BER_SØ_IND) *                  
                           GP_FAKTOR /(40 * 12) + 0.5;                          
                 ST_NORSK_NÅ = G_NÅ * B02.TT_ANV(BER_SØ_IND)                    
                                    * W_PROSENT                                 
                                    / (40 * 12 * 100)  + 0.5;                   
                                                                                
                 IF ST_NORSK_NÅ > TP_NORSK_NÅ          THEN                     
                    ST_NORSK_NÅ = ST_NORSK_NÅ - TP_NORSK_NÅ;                    
                 ELSE                                                           
                    ST_NORSK_NÅ = 0;                                            
                 SUM_YTELSE_NÅ = TP_NORSK_NÅ + GP_NORSK_NÅ                      
                                 + ST_NORSK_NÅ;                                 
                                                                                
                 IF SUM_YTELSE_NÅ          >                                    
                    B01.SUM_YTELSE(BER_SØ_IND)        THEN                      
                    B02.PRO_RATA_BEREGNING(BER_SØ_IND) = 'D';                   
              END;                                                              
           END;                                                                 
        ELSE                                                                    
        IF TRANSTYPE = 24  /*OVERGANG FRA UP TIL AP*/   !                       
           TRANSTYPE = 26  /*OVERGANG TIL P70      */  THEN                     
           B02.PRO_RATA_BEREGNING(BER_SØ_IND) = 'B';                            
     END;                                                                       
  /* SE REMEDY 198: DERSOM INGEN INNTEKT BLE TP IKKE BEREGNET ETTER   */        
  /*                YRKESSKADEREGLENE TAR BORT DENNE TESTEN, MARTIN   */        
  /* REMEDY 198:                                                                
  IF B02.ALDERSP.FAI(BER_SØ_IND) > 0             THEN                           
     REMEDY 198: TIL HIT */                                                     
    DO;                                                                         
       IF ((B02.KONV_P_KODE(BER_SØ_IND) ^= 'K' )  &                             
           (B02.VIRK_DATO_ÅMD(BER_SØ_IND)> 19970000)) !                         
           (B02.VIRK_DATO_ÅMD(BER_SØ_IND)> 20010000)     THEN                   
          CALL JUSTER_40PROS(BER_SØ_IND);    /*200010*/                         
       ELSE                                                                     
          CALL JUSTER_FORVENTET(                                                
            (B02.ALDERSP.KT(BER_SØ_IND)),BER_SØ_IND); /*200010*/                
       IF ( B02.ALDERSP.GP(BER_SØ_IND)                                          
            + B02.ALDERSP.TP(BER_SØ_IND) )  >                                   
          ( B02.AP_GP_NETTO(BER_SØ_IND) +                                       
              B02.AP_TP_NETTO(BER_SØ_IND) )   THEN                              
                                                                                
  /*VI MÅ OGSÅ REDUSERE DE ALTERNATIVE BELØP : ******** */                      
                                                                                
          DO;                                                                   
             W_GP_NETTO = B02.AP_GP_NETTO(BER_SØ_IND);                          
             W_TP_NETTO = B02.AP_TP_NETTO(BER_SØ_IND);                          
             W_ST       = B02.AP_ST_NETTO     (BER_SØ_IND);                     
             W_GP_SPAR  = B02.ALDERSP.GP(BER_SØ_IND);                           
             W_ST_SPAR  = B02.ALDERSP.ST(BER_SØ_IND);                           
             W_TP_SPAR  = B02.ALDERSP.TP(BER_SØ_IND);                           
             B02.ALDERSP.GP(BER_SØ_IND) =                                       
                       B02.ALTERNATIV_GP_BRUTTO(BER_SØ_IND);                    
             B02.ALDERSP.TP(BER_SØ_IND) =                                       
                       B02.ALTERNATIV_TP_BRUTTO(BER_SØ_IND);                    
             B02.ALDERSP.ST(BER_SØ_IND) =                                       
                       B02.ALTERNATIV_ST_BRUTTO(BER_SØ_IND);                    
             IF (B02.KONV_P_KODE(BER_SØ_IND) ^= 'K' )  &                        
                (B02.VIRK_DATO_ÅMD(BER_SØ_IND)> 19970000)  THEN                 
                CALL JUSTER_40PROS(BER_SØ_IND);   /*200010*/                    
             ELSE                                                               
                CALL JUSTER_FORVENTET(                                          
                (B02.ALDERSP.KT(BER_SØ_IND)),BER_SØ_IND);/*200010*/             
             B02.ALTERNATIV_GP(BER_SØ_IND) =                                    
                          B02.AP_GP_NETTO(BER_SØ_IND);                          
             B02.ALTERNATIV_TP(BER_SØ_IND) =                                    
                          B02.AP_TP_NETTO(BER_SØ_IND);                          
             B02.ALTERNATIV_ST(BER_SØ_IND) =                                    
                          B02.AP_ST_NETTO(BER_SØ_IND);                          
             B02.ALTERNATIV_SUM_PENSJON(BER_SØ_IND) =                           
                            B02.ALTERNATIV_GP(BER_SØ_IND) +                     
                            B02.ALTERNATIV_TP(BER_SØ_IND)  +                    
                            B02.ALTERNATIV_ST(BER_SØ_IND);                      
             B02.AP_GP_NETTO(BER_SØ_IND) = W_GP_NETTO;                          
             B02.AP_ST_NETTO(BER_SØ_IND) = W_ST;                                
             B02.AP_TP_NETTO(BER_SØ_IND) = W_TP_NETTO;                          
             B02.ALDERSP.ST      (BER_SØ_IND) = W_ST_SPAR;                      
             B02.ALDERSP.GP(BER_SØ_IND)       = W_GP_SPAR;                      
             B02.ALDERSP.TP(BER_SØ_IND)       = W_TP_SPAR;                      
          END;                                                                  
    END;                                                                        
                                                                                
    IF B02.GT_LOV92(BER_SØ_IND) > 0            THEN                             
       DO;                                                                      
          B02.GT_TILLEGG_LOV92(BER_SØ_IND) =                                    
             B02.GT_LOV92(BER_SØ_IND) -                                         
            (B02.ALDERSP.TP(BER_SØ_IND) +                                       
             B02.ALDERSP.ST(BER_SØ_IND)  );                                     
                                                                                
          IF B02.GT_TILLEGG_LOV92(BER_SØ_IND) < 0     THEN                      
             B02.GT_TILLEGG_LOV92(BER_SØ_IND) = 0;                              
          ELSE                                                                  
             B02.SUM_YTELSE(BER_SØ_IND) =                                       
                B02.SUM_YTELSE(BER_SØ_IND) +                                    
                B02.GT_TILLEGG_LOV92(BER_SØ_IND);                               
       END;                                                                     
                                                                                
 %INCLUDE R0014021;    /* JUSTER_40PROS                      */                 
 %INCLUDE R0014022;    /* JUSTER_FORVENTET                   */                 
 %INCLUDE R0014133;    /*F_BEREGN_SÆRTILLEGG                 */                 
 %INCLUDE R0014135;    /*TIDLIGERE_ARBEIDSINNTEKT            */                 
 %INCLUDE R0014140;    /*F_OVERGANG_FRA_YP                   */                 
 %INCLUDE R0014148;    /*F_TP92                              */                 
 %INCLUDE R0014151;    /*KLARGJØR_TAB                        */                 
 %INCLUDE R0014161;    /*LEGG_UFØREHIST_I_TAB                */                 
 %INCLUDE R0014163;    /*F_INNTEKT_POENG                     */                 
 %INCLUDE R0014187;    /*F_TP_AARSBEL_M_2_DES                */                 
 %INCLUDE R0014153;    /*BEREGN_SPT_OPT_PÅ                   */                 
 %INCLUDE R0014241;    /*BEREGN_AP_OVERGANG_FRA_YP           */                 
 %INCLUDE R0019905;    /*F_ALDER                             */                 
 %INCLUDE R0019995;    /*KONV_FNR11_FNR13                    */                 
 %INCLUDE R0019997;    /*F_FIX3_GYLDIG                       */                 
                                                                                
 SLUTT:                                                                         
 END APXEØS;                                                                    
